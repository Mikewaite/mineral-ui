// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dropdown demo examples Snapshots: basic 1`] = `
.emotion-4 {
  display: inline-block;
}

.emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

<Dropdown
  data={
    Array [
      Object {
        "text": "Light years",
      },
      Object {
        "text": "Star stuff",
      },
      Object {
        "text": "Encyclopaedia galactica",
      },
      Object {
        "text": "Cosmic ocean",
      },
    ]
  }
  itemKey="text"
  placement="bottom-start"
>
  <Popover
    content={[Function]}
    focusTriggerOnClose={true}
    hasArrow={true}
    id="dropdown-1"
    isOpen={false}
    itemKey="text"
    onClose={[Function]}
    onOpen={[Function]}
    placement="bottom-start"
    triggerRef={[Function]}
  >
    <Manager>
      <Styled(span)
        focusTriggerOnClose={true}
        hasArrow={true}
        id="dropdown-1"
        isOpen={false}
        itemKey="text"
        placement="bottom-start"
        triggerRef={[Function]}
      >
        <span
          className="emotion-4"
          id="dropdown-1"
        >
          <WithForwardRef(PopoverTrigger)
            aria-describedby="dropdown-1-content"
            aria-expanded={false}
            aria-haspopup={true}
            aria-owns="dropdown-1-content"
            onBlur={[Function]}
            onClick={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            role="button"
            size="large"
          >
            <PopoverTrigger
              aria-describedby="dropdown-1-content"
              aria-expanded={false}
              aria-haspopup={true}
              aria-owns="dropdown-1-content"
              forwardedRef={[Function]}
              onBlur={[Function]}
              onClick={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              role="button"
              size="large"
            >
              <Reference>
                <InnerReference
                  setReferenceNode={[Function]}
                >
                  <Styled(span)>
                    <span
                      className="emotion-3"
                    >
                      <WithForwardRef(Button)
                        aria-describedby="dropdown-1-content"
                        aria-expanded={false}
                        aria-haspopup={true}
                        aria-owns="dropdown-1-content"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        role="button"
                        size="large"
                      >
                        <Button
                          aria-describedby="dropdown-1-content"
                          aria-expanded={false}
                          aria-haspopup={true}
                          aria-owns="dropdown-1-content"
                          forwardedRef={null}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          role="button"
                          size="large"
                        >
                          <Styled(button)
                            aria-describedby="dropdown-1-content"
                            aria-expanded={false}
                            aria-haspopup={true}
                            aria-owns="dropdown-1-content"
                            onBlur={[Function]}
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            role="button"
                            size="large"
                            text="Menu"
                          >
                            <button
                              aria-describedby="dropdown-1-content"
                              aria-expanded={false}
                              aria-haspopup={true}
                              aria-owns="dropdown-1-content"
                              className="emotion-2"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              role="button"
                            >
                              <Styled(span)>
                                <span
                                  className="emotion-1"
                                >
                                  <Styled(span)
                                    size="large"
                                  >
                                    <span
                                      className="emotion-0"
                                    >
                                      Menu
                                    </span>
                                  </Styled(span)>
                                </span>
                              </Styled(span)>
                            </button>
                          </Styled(button)>
                        </Button>
                      </WithForwardRef(Button)>
                    </span>
                  </Styled(span)>
                </InnerReference>
              </Reference>
            </PopoverTrigger>
          </WithForwardRef(PopoverTrigger)>
        </span>
      </Styled(span)>
    </Manager>
  </Popover>
</Dropdown>
`;

exports[`Dropdown demo examples Snapshots: controlled 1`] = `
.emotion-4 {
  display: inline-block;
}

.emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

.emotion-8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

<App>
  <DemoLayout>
    <Styled(div)>
      <div
        className="emotion-8"
      >
        <Dropdown
          data={
            Array [
              Object {
                "text": "Light years",
              },
              Object {
                "text": "Star stuff",
              },
              Object {
                "text": "Encyclopaedia galactica",
              },
              Object {
                "text": "Cosmic ocean",
              },
            ]
          }
          isOpen={false}
          itemKey="text"
          onClose={[Function]}
          onOpen={[Function]}
          placement="bottom-start"
        >
          <Popover
            content={[Function]}
            focusTriggerOnClose={true}
            hasArrow={true}
            id="dropdown-10"
            isOpen={false}
            itemKey="text"
            onClose={[Function]}
            onOpen={[Function]}
            placement="bottom-start"
            triggerRef={[Function]}
          >
            <Manager>
              <Styled(span)
                focusTriggerOnClose={true}
                hasArrow={true}
                id="dropdown-10"
                isOpen={false}
                itemKey="text"
                placement="bottom-start"
                triggerRef={[Function]}
              >
                <span
                  className="emotion-4"
                  id="dropdown-10"
                >
                  <WithForwardRef(PopoverTrigger)
                    aria-describedby="dropdown-10-content"
                    aria-expanded={false}
                    aria-haspopup={true}
                    aria-owns="dropdown-10-content"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    role="button"
                    size="large"
                  >
                    <PopoverTrigger
                      aria-describedby="dropdown-10-content"
                      aria-expanded={false}
                      aria-haspopup={true}
                      aria-owns="dropdown-10-content"
                      forwardedRef={[Function]}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      role="button"
                      size="large"
                    >
                      <Reference>
                        <InnerReference
                          setReferenceNode={[Function]}
                        >
                          <Styled(span)>
                            <span
                              className="emotion-3"
                            >
                              <WithForwardRef(Button)
                                aria-describedby="dropdown-10-content"
                                aria-expanded={false}
                                aria-haspopup={true}
                                aria-owns="dropdown-10-content"
                                onBlur={[Function]}
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                role="button"
                                size="large"
                              >
                                <Button
                                  aria-describedby="dropdown-10-content"
                                  aria-expanded={false}
                                  aria-haspopup={true}
                                  aria-owns="dropdown-10-content"
                                  forwardedRef={null}
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  role="button"
                                  size="large"
                                >
                                  <Styled(button)
                                    aria-describedby="dropdown-10-content"
                                    aria-expanded={false}
                                    aria-haspopup={true}
                                    aria-owns="dropdown-10-content"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    role="button"
                                    size="large"
                                    text="Open Dropdown"
                                  >
                                    <button
                                      aria-describedby="dropdown-10-content"
                                      aria-expanded={false}
                                      aria-haspopup={true}
                                      aria-owns="dropdown-10-content"
                                      className="emotion-2"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      role="button"
                                    >
                                      <Styled(span)>
                                        <span
                                          className="emotion-1"
                                        >
                                          <Styled(span)
                                            size="large"
                                          >
                                            <span
                                              className="emotion-0"
                                            >
                                              Open Dropdown
                                            </span>
                                          </Styled(span)>
                                        </span>
                                      </Styled(span)>
                                    </button>
                                  </Styled(button)>
                                </Button>
                              </WithForwardRef(Button)>
                            </span>
                          </Styled(span)>
                        </InnerReference>
                      </Reference>
                    </PopoverTrigger>
                  </WithForwardRef(PopoverTrigger)>
                </span>
              </Styled(span)>
            </Manager>
          </Popover>
        </Dropdown>
        <WithForwardRef(Button)
          onClick={[Function]}
          size="large"
        >
          <Button
            forwardedRef={null}
            onClick={[Function]}
            size="large"
          >
            <Styled(button)
              onClick={[Function]}
              size="large"
              text="Open Dropdown"
            >
              <button
                className="emotion-2"
                onClick={[Function]}
              >
                <Styled(span)>
                  <span
                    className="emotion-1"
                  >
                    <Styled(span)
                      size="large"
                    >
                      <span
                        className="emotion-0"
                      >
                        Open Dropdown
                      </span>
                    </Styled(span)>
                  </span>
                </Styled(span)>
              </button>
            </Styled(button)>
          </Button>
        </WithForwardRef(Button)>
      </div>
    </Styled(div)>
  </DemoLayout>
</App>
`;

exports[`Dropdown demo examples Snapshots: custom-item 1`] = `
.emotion-24 {
  display: inline-block;
}

.emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

.emotion-22 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.emotion-22 *,
.emotion-22 *::before,
.emotion-22 *::after {
  box-sizing: inherit;
}

.emotion-23 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2),0 4px 8px 0 rgba(0,0,0,0.2);
  max-height: 30vh;
  overflow-y: auto;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  width: 14em;
  z-index: 100;
}

.emotion-23 *,
.emotion-23 *::before,
.emotion-23 *::after {
  box-sizing: inherit;
}

.emotion-23[data-placement^="top"] {
  margin-bottom: 5px;
}

.emotion-23[data-placement^="bottom"] {
  margin-top: 5px;
}

.emotion-23[data-placement^="left"] {
  margin-right: 5px;
}

.emotion-23[data-placement^="right"] {
  margin-left: 5px;
}

.emotion-23[data-out-of-boundaries] {
  visibility: hidden;
}

.emotion-25 {
  margin-bottom: 160px;
}

.emotion-9 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 0.5em 1em;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-9 *,
.emotion-9 *::before,
.emotion-9 *::after {
  box-sizing: inherit;
}

.emotion-9:focus {
  background-color: #cfe0fc;
  outline: 0;
}

.emotion-9:hover {
  background-color: #cfe0fc;
}

.emotion-9:active {
  background-color: #84b1fa;
}

.emotion-5 {
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  height: 2.25em;
  margin-right: 0.5em;
  width: 2.25em;
}

.emotion-4 {
  box-sizing: border-box;
  color: #ffffff;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 2.5em;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: 100%;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-weight: 700;
  height: 2.5em;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  vertical-align: middle;
  width: 2.5em;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  height: 2.25em;
  margin-right: 0.5em;
  width: 2.25em;
}

.emotion-4 *,
.emotion-4 *::before,
.emotion-4 *::after {
  box-sizing: inherit;
}

.emotion-4 > abbr,
.emotion-4 > span {
  font-size: 1.125em;
}

.emotion-4 > abbr {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-4 > img {
  border-radius: 100%;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  max-width: 100%;
}

.emotion-4 > [role="img"] {
  color: #ffffff;
}

.emotion-8 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  white-space: normal;
  word-break: break-all;
}

.emotion-7 {
  color: #58606e;
  display: block;
  font-size: 0.6875em;
  margin-top: 0.25em;
}

<Component>
  <DemoLayout>
    <Styled(div)>
      <div
        className="emotion-25"
      >
        <Dropdown
          data={
            Array [
              Object {
                "avatar": "/images/avatar.svg",
                "text": "Newton",
                "work": "Principia Mathematica",
              },
              Object {
                "avatar": "/images/avatar.svg",
                "text": "Descartes",
                "work": "La Géométrie",
              },
              Object {
                "avatar": "/images/avatar.svg",
                "text": "Euclid",
                "work": "Elements",
              },
            ]
          }
          isOpen={true}
          item={[Function]}
          itemKey="text"
          placement="bottom-start"
        >
          <Popover
            content={[Function]}
            focusTriggerOnClose={true}
            hasArrow={true}
            id="dropdown-12"
            isOpen={true}
            itemKey="text"
            onClose={[Function]}
            onOpen={[Function]}
            placement="bottom-start"
            triggerRef={[Function]}
          >
            <Manager>
              <Styled(span)
                focusTriggerOnClose={true}
                hasArrow={true}
                id="dropdown-12"
                isOpen={true}
                itemKey="text"
                placement="bottom-start"
                triggerRef={[Function]}
              >
                <span
                  className="emotion-24"
                  id="dropdown-12"
                >
                  <WithForwardRef(PopoverTrigger)
                    aria-activedescendant="dropdown-12-menu"
                    aria-describedby="dropdown-12-content"
                    aria-expanded={true}
                    aria-haspopup={true}
                    aria-owns="dropdown-12-content"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    role="button"
                    size="large"
                  >
                    <PopoverTrigger
                      aria-activedescendant="dropdown-12-menu"
                      aria-describedby="dropdown-12-content"
                      aria-expanded={true}
                      aria-haspopup={true}
                      aria-owns="dropdown-12-content"
                      forwardedRef={[Function]}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      role="button"
                      size="large"
                    >
                      <Reference>
                        <InnerReference
                          setReferenceNode={[Function]}
                        >
                          <Styled(span)>
                            <span
                              className="emotion-3"
                            >
                              <WithForwardRef(Button)
                                aria-activedescendant="dropdown-12-menu"
                                aria-describedby="dropdown-12-content"
                                aria-expanded={true}
                                aria-haspopup={true}
                                aria-owns="dropdown-12-content"
                                onBlur={[Function]}
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                role="button"
                                size="large"
                              >
                                <Button
                                  aria-activedescendant="dropdown-12-menu"
                                  aria-describedby="dropdown-12-content"
                                  aria-expanded={true}
                                  aria-haspopup={true}
                                  aria-owns="dropdown-12-content"
                                  forwardedRef={null}
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  role="button"
                                  size="large"
                                >
                                  <Styled(button)
                                    aria-activedescendant="dropdown-12-menu"
                                    aria-describedby="dropdown-12-content"
                                    aria-expanded={true}
                                    aria-haspopup={true}
                                    aria-owns="dropdown-12-content"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    role="button"
                                    size="large"
                                    text="Menu"
                                  >
                                    <button
                                      aria-activedescendant="dropdown-12-menu"
                                      aria-describedby="dropdown-12-content"
                                      aria-expanded={true}
                                      aria-haspopup={true}
                                      aria-owns="dropdown-12-content"
                                      className="emotion-2"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      role="button"
                                    >
                                      <Styled(span)>
                                        <span
                                          className="emotion-1"
                                        >
                                          <Styled(span)
                                            size="large"
                                          >
                                            <span
                                              className="emotion-0"
                                            >
                                              Menu
                                            </span>
                                          </Styled(span)>
                                        </span>
                                      </Styled(span)>
                                    </button>
                                  </Styled(button)>
                                </Button>
                              </WithForwardRef(Button)>
                            </span>
                          </Styled(span)>
                        </InnerReference>
                      </Reference>
                    </PopoverTrigger>
                  </WithForwardRef(PopoverTrigger)>
                  <WithForwardRef(DropdownContent)
                    hasArrow={true}
                    id="dropdown-12-content"
                    onBlur={[Function]}
                    placement="bottom-start"
                  >
                    <DropdownContent
                      forwardedRef={[Function]}
                      hasArrow={true}
                      id="dropdown-12-content"
                      onBlur={[Function]}
                      placement="bottom-start"
                    >
                      <WithTheme(RtlPopper)
                        placement="bottom-start"
                      >
                        <RtlPopper
                          placement="bottom-start"
                        >
                          <Popper
                            placement="bottom-start"
                          >
                            <InnerPopper
                              eventsEnabled={true}
                              placement="bottom-start"
                              positionFixed={false}
                              referenceElement={
                                .emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

<span
                                  class="emotion-3"
                                >
                                  <button
                                    aria-activedescendant="dropdown-12-menu"
                                    aria-describedby="dropdown-12-content"
                                    aria-expanded="true"
                                    aria-haspopup="true"
                                    aria-owns="dropdown-12-content"
                                    class="emotion-2"
                                    role="button"
                                  >
                                    <span
                                      class="emotion-1"
                                    >
                                      <span
                                        class="emotion-0"
                                      >
                                        Menu
                                      </span>
                                    </span>
                                  </button>
                                </span>
                              }
                            >
                              <Styled(div)
                                hasArrow={true}
                                id="dropdown-12-content"
                                onBlur={[Function]}
                                style={
                                  Object {
                                    "left": 0,
                                    "opacity": 0,
                                    "pointerEvents": "none",
                                    "position": "absolute",
                                    "top": 0,
                                  }
                                }
                              >
                                <div
                                  className="emotion-23"
                                  id="dropdown-12-content"
                                  onBlur={[Function]}
                                  style={
                                    Object {
                                      "left": 0,
                                      "opacity": 0,
                                      "pointerEvents": "none",
                                      "position": "absolute",
                                      "top": 0,
                                    }
                                  }
                                >
                                  <Menu
                                    data={
                                      Array [
                                        Object {
                                          "avatar": "/images/avatar.svg",
                                          "text": "Newton",
                                          "work": "Principia Mathematica",
                                        },
                                        Object {
                                          "avatar": "/images/avatar.svg",
                                          "text": "Descartes",
                                          "work": "La Géométrie",
                                        },
                                        Object {
                                          "avatar": "/images/avatar.svg",
                                          "text": "Euclid",
                                          "work": "Elements",
                                        },
                                      ]
                                    }
                                    id="dropdown-12-menu"
                                    item={[Function]}
                                    itemKey="text"
                                    role="menu"
                                  >
                                    <Styled(div)
                                      id="dropdown-12-menu"
                                      item={[Function]}
                                      itemKey="text"
                                      role="menu"
                                    >
                                      <div
                                        className="emotion-22"
                                        id="dropdown-12-menu"
                                        role="menu"
                                      >
                                        <MenuItem
                                          avatar="/images/avatar.svg"
                                          index={0}
                                          isHighlighted={false}
                                          item={
                                            Object {
                                              "avatar": "/images/avatar.svg",
                                              "text": "Newton",
                                              "work": "Principia Mathematica",
                                            }
                                          }
                                          key="Newton"
                                          render={[Function]}
                                          text="Newton"
                                          work="Principia Mathematica"
                                        >
                                          <WithTheme(Component)>
                                            <Component>
                                              <Styled(div)
                                                avatar="/images/avatar.svg"
                                                id="dropdown-12-item-0"
                                                index={0}
                                                isHighlighted={false}
                                                item={
                                                  Object {
                                                    "avatar": "/images/avatar.svg",
                                                    "text": "Newton",
                                                    "work": "Principia Mathematica",
                                                  }
                                                }
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex={null}
                                                text="Newton"
                                                work="Principia Mathematica"
                                              >
                                                <div
                                                  className="emotion-9"
                                                  id="dropdown-12-item-0"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  role="menuitem"
                                                  tabIndex={null}
                                                >
                                                  <Styled(Avatar)
                                                    shape="circle"
                                                    size="large"
                                                  >
                                                    <Avatar
                                                      className="emotion-5"
                                                      shape="circle"
                                                      size="large"
                                                    >
                                                      <Styled(span)
                                                        className="emotion-5"
                                                        noBackground={true}
                                                        shape="circle"
                                                        size="large"
                                                      >
                                                        <span
                                                          className="emotion-4"
                                                        >
                                                          <img
                                                            alt="Newton"
                                                            src="/images/avatar.svg"
                                                          />
                                                        </span>
                                                      </Styled(span)>
                                                    </Avatar>
                                                  </Styled(Avatar)>
                                                  <Styled(span)>
                                                    <span
                                                      className="emotion-8"
                                                    >
                                                      Newton
                                                      <Styled(span)>
                                                        <span
                                                          className="emotion-7"
                                                        >
                                                          Principia Mathematica
                                                        </span>
                                                      </Styled(span)>
                                                    </span>
                                                  </Styled(span)>
                                                </div>
                                              </Styled(div)>
                                            </Component>
                                          </WithTheme(Component)>
                                        </MenuItem>
                                        <MenuItem
                                          avatar="/images/avatar.svg"
                                          index={1}
                                          isHighlighted={false}
                                          item={
                                            Object {
                                              "avatar": "/images/avatar.svg",
                                              "text": "Descartes",
                                              "work": "La Géométrie",
                                            }
                                          }
                                          key="Descartes"
                                          render={[Function]}
                                          text="Descartes"
                                          work="La Géométrie"
                                        >
                                          <WithTheme(Component)>
                                            <Component>
                                              <Styled(div)
                                                avatar="/images/avatar.svg"
                                                id="dropdown-12-item-1"
                                                index={1}
                                                isHighlighted={false}
                                                item={
                                                  Object {
                                                    "avatar": "/images/avatar.svg",
                                                    "text": "Descartes",
                                                    "work": "La Géométrie",
                                                  }
                                                }
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex={null}
                                                text="Descartes"
                                                work="La Géométrie"
                                              >
                                                <div
                                                  className="emotion-9"
                                                  id="dropdown-12-item-1"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  role="menuitem"
                                                  tabIndex={null}
                                                >
                                                  <Styled(Avatar)
                                                    shape="circle"
                                                    size="large"
                                                  >
                                                    <Avatar
                                                      className="emotion-5"
                                                      shape="circle"
                                                      size="large"
                                                    >
                                                      <Styled(span)
                                                        className="emotion-5"
                                                        noBackground={true}
                                                        shape="circle"
                                                        size="large"
                                                      >
                                                        <span
                                                          className="emotion-4"
                                                        >
                                                          <img
                                                            alt="Descartes"
                                                            src="/images/avatar.svg"
                                                          />
                                                        </span>
                                                      </Styled(span)>
                                                    </Avatar>
                                                  </Styled(Avatar)>
                                                  <Styled(span)>
                                                    <span
                                                      className="emotion-8"
                                                    >
                                                      Descartes
                                                      <Styled(span)>
                                                        <span
                                                          className="emotion-7"
                                                        >
                                                          La Géométrie
                                                        </span>
                                                      </Styled(span)>
                                                    </span>
                                                  </Styled(span)>
                                                </div>
                                              </Styled(div)>
                                            </Component>
                                          </WithTheme(Component)>
                                        </MenuItem>
                                        <MenuItem
                                          avatar="/images/avatar.svg"
                                          index={2}
                                          isHighlighted={false}
                                          item={
                                            Object {
                                              "avatar": "/images/avatar.svg",
                                              "text": "Euclid",
                                              "work": "Elements",
                                            }
                                          }
                                          key="Euclid"
                                          render={[Function]}
                                          text="Euclid"
                                          work="Elements"
                                        >
                                          <WithTheme(Component)>
                                            <Component>
                                              <Styled(div)
                                                avatar="/images/avatar.svg"
                                                id="dropdown-12-item-2"
                                                index={2}
                                                isHighlighted={false}
                                                item={
                                                  Object {
                                                    "avatar": "/images/avatar.svg",
                                                    "text": "Euclid",
                                                    "work": "Elements",
                                                  }
                                                }
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex={null}
                                                text="Euclid"
                                                work="Elements"
                                              >
                                                <div
                                                  className="emotion-9"
                                                  id="dropdown-12-item-2"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  role="menuitem"
                                                  tabIndex={null}
                                                >
                                                  <Styled(Avatar)
                                                    shape="circle"
                                                    size="large"
                                                  >
                                                    <Avatar
                                                      className="emotion-5"
                                                      shape="circle"
                                                      size="large"
                                                    >
                                                      <Styled(span)
                                                        className="emotion-5"
                                                        noBackground={true}
                                                        shape="circle"
                                                        size="large"
                                                      >
                                                        <span
                                                          className="emotion-4"
                                                        >
                                                          <img
                                                            alt="Euclid"
                                                            src="/images/avatar.svg"
                                                          />
                                                        </span>
                                                      </Styled(span)>
                                                    </Avatar>
                                                  </Styled(Avatar)>
                                                  <Styled(span)>
                                                    <span
                                                      className="emotion-8"
                                                    >
                                                      Euclid
                                                      <Styled(span)>
                                                        <span
                                                          className="emotion-7"
                                                        >
                                                          Elements
                                                        </span>
                                                      </Styled(span)>
                                                    </span>
                                                  </Styled(span)>
                                                </div>
                                              </Styled(div)>
                                            </Component>
                                          </WithTheme(Component)>
                                        </MenuItem>
                                      </div>
                                    </Styled(div)>
                                  </Menu>
                                </div>
                              </Styled(div)>
                            </InnerPopper>
                          </Popper>
                        </RtlPopper>
                      </WithTheme(RtlPopper)>
                    </DropdownContent>
                  </WithForwardRef(DropdownContent)>
                  <EventListener
                    listeners={
                      Array [
                        Object {
                          "event": "click",
                          "handler": [Function],
                          "options": true,
                          "target": "document",
                        },
                        Object {
                          "event": "keydown",
                          "handler": [Function],
                          "options": true,
                          "target": "document",
                        },
                      ]
                    }
                  />
                </span>
              </Styled(span)>
            </Manager>
          </Popover>
        </Dropdown>
      </div>
    </Styled(div)>
  </DemoLayout>
</Component>
`;

exports[`Dropdown demo examples Snapshots: custom-menu 1`] = `
.emotion-34 {
  display: inline-block;
}

.emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

.emotion-14 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.emotion-14 *,
.emotion-14 *::before,
.emotion-14 *::after {
  box-sizing: inherit;
}

.emotion-19 {
  color: #333840;
  cursor: pointer;
  display: block;
  font-weight: 400;
  padding: 0.5em 1em;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-19:focus {
  background-color: #f5f7fa;
  outline: 0;
}

.emotion-19:hover {
  background-color: #f5f7fa;
}

.emotion-19:active {
  background-color: #ebeff5;
}

.emotion-19[aria-selected="true"] {
  background-color: #f0f5fc;
  font-weight: 700;
}

.emotion-19[aria-selected="true"]:active {
  background-color: #accbfc;
}

.emotion-19 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.emotion-19 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-19 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-18 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-17 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  padding: 0.1875em 0 0.25em;
  white-space: normal;
  word-break: break-all;
}

.emotion-16 {
  font-size: 0.875em;
  margin-right: 0.5714285714285714em;
  word-break: break-word;
}

.emotion-33 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2),0 4px 8px 0 rgba(0,0,0,0.2);
  max-height: 30vh;
  overflow-y: auto;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  width: 14em;
  z-index: 100;
}

.emotion-33 *,
.emotion-33 *::before,
.emotion-33 *::after {
  box-sizing: inherit;
}

.emotion-33[data-placement^="top"] {
  margin-bottom: 5px;
}

.emotion-33[data-placement^="bottom"] {
  margin-top: 5px;
}

.emotion-33[data-placement^="left"] {
  margin-right: 5px;
}

.emotion-33[data-placement^="right"] {
  margin-left: 5px;
}

.emotion-33[data-out-of-boundaries] {
  visibility: hidden;
}

.emotion-35 {
  margin-bottom: 240px;
}

.emotion-15 {
  border-bottom: 1px solid #c8d1e0;
  padding: 1em;
}

.emotion-4 {
  color: #58606e;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  font-size: 0.875em;
  font-weight: 600;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin-bottom: 0.5em;
  border: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.emotion-4 > * {
  -webkit-align-self: flex-end;
  -ms-flex-item-align: end;
  align-self: flex-end;
  display: inline-block;
}

.emotion-10 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-10 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-10 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-9 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-9 *,
.emotion-9 *::before,
.emotion-9 *::after {
  box-sizing: inherit;
}

.emotion-9:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-9:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-9:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-9 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-9 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-6 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
}

.emotion-6::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-6::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-6:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-6::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-6::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-6:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-6::-ms-clear {
  display: none;
}

.emotion-6:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-5 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
}

.emotion-5[type="search"] {
  -webkit-appearance: none;
}

.emotion-5[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-5::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-5::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-5:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-5::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-5::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-5:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-5::-ms-clear {
  display: none;
}

.emotion-5:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-7 {
  fill: currentcolor;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
}

.emotion-8 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<Component>
  <DemoLayout>
    <Styled(div)>
      <div
        className="emotion-35"
      >
        <Dropdown
          data={
            Array [
              Object {
                "text": "Light years",
              },
              Object {
                "text": "Star stuff",
              },
              Object {
                "text": "Encyclopaedia galactica",
              },
              Object {
                "text": "Cosmic ocean",
              },
            ]
          }
          isOpen={true}
          itemKey="text"
          menu={[Function]}
          placement="bottom-start"
        >
          <Popover
            content={[Function]}
            focusTriggerOnClose={true}
            hasArrow={true}
            id="dropdown-13"
            isOpen={true}
            itemKey="text"
            onClose={[Function]}
            onOpen={[Function]}
            placement="bottom-start"
            triggerRef={[Function]}
          >
            <Manager>
              <Styled(span)
                focusTriggerOnClose={true}
                hasArrow={true}
                id="dropdown-13"
                isOpen={true}
                itemKey="text"
                placement="bottom-start"
                triggerRef={[Function]}
              >
                <span
                  className="emotion-34"
                  id="dropdown-13"
                >
                  <WithForwardRef(PopoverTrigger)
                    aria-activedescendant="dropdown-13-menu"
                    aria-describedby="dropdown-13-content"
                    aria-expanded={true}
                    aria-haspopup={true}
                    aria-owns="dropdown-13-content"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    role="button"
                    size="large"
                  >
                    <PopoverTrigger
                      aria-activedescendant="dropdown-13-menu"
                      aria-describedby="dropdown-13-content"
                      aria-expanded={true}
                      aria-haspopup={true}
                      aria-owns="dropdown-13-content"
                      forwardedRef={[Function]}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      role="button"
                      size="large"
                    >
                      <Reference>
                        <InnerReference
                          setReferenceNode={[Function]}
                        >
                          <Styled(span)>
                            <span
                              className="emotion-3"
                            >
                              <WithForwardRef(Button)
                                aria-activedescendant="dropdown-13-menu"
                                aria-describedby="dropdown-13-content"
                                aria-expanded={true}
                                aria-haspopup={true}
                                aria-owns="dropdown-13-content"
                                onBlur={[Function]}
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                role="button"
                                size="large"
                              >
                                <Button
                                  aria-activedescendant="dropdown-13-menu"
                                  aria-describedby="dropdown-13-content"
                                  aria-expanded={true}
                                  aria-haspopup={true}
                                  aria-owns="dropdown-13-content"
                                  forwardedRef={null}
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  role="button"
                                  size="large"
                                >
                                  <Styled(button)
                                    aria-activedescendant="dropdown-13-menu"
                                    aria-describedby="dropdown-13-content"
                                    aria-expanded={true}
                                    aria-haspopup={true}
                                    aria-owns="dropdown-13-content"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    role="button"
                                    size="large"
                                    text="Menu"
                                  >
                                    <button
                                      aria-activedescendant="dropdown-13-menu"
                                      aria-describedby="dropdown-13-content"
                                      aria-expanded={true}
                                      aria-haspopup={true}
                                      aria-owns="dropdown-13-content"
                                      className="emotion-2"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      role="button"
                                    >
                                      <Styled(span)>
                                        <span
                                          className="emotion-1"
                                        >
                                          <Styled(span)
                                            size="large"
                                          >
                                            <span
                                              className="emotion-0"
                                            >
                                              Menu
                                            </span>
                                          </Styled(span)>
                                        </span>
                                      </Styled(span)>
                                    </button>
                                  </Styled(button)>
                                </Button>
                              </WithForwardRef(Button)>
                            </span>
                          </Styled(span)>
                        </InnerReference>
                      </Reference>
                    </PopoverTrigger>
                  </WithForwardRef(PopoverTrigger)>
                  <WithForwardRef(DropdownContent)
                    hasArrow={true}
                    id="dropdown-13-content"
                    onBlur={[Function]}
                    placement="bottom-start"
                  >
                    <DropdownContent
                      forwardedRef={[Function]}
                      hasArrow={true}
                      id="dropdown-13-content"
                      onBlur={[Function]}
                      placement="bottom-start"
                    >
                      <WithTheme(RtlPopper)
                        placement="bottom-start"
                      >
                        <RtlPopper
                          placement="bottom-start"
                        >
                          <Popper
                            placement="bottom-start"
                          >
                            <InnerPopper
                              eventsEnabled={true}
                              placement="bottom-start"
                              positionFixed={false}
                              referenceElement={
                                .emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

<span
                                  class="emotion-3"
                                >
                                  <button
                                    aria-activedescendant="dropdown-13-menu"
                                    aria-describedby="dropdown-13-content"
                                    aria-expanded="true"
                                    aria-haspopup="true"
                                    aria-owns="dropdown-13-content"
                                    class="emotion-2"
                                    role="button"
                                  >
                                    <span
                                      class="emotion-1"
                                    >
                                      <span
                                        class="emotion-0"
                                      >
                                        Menu
                                      </span>
                                    </span>
                                  </button>
                                </span>
                              }
                            >
                              <Styled(div)
                                hasArrow={true}
                                id="dropdown-13-content"
                                onBlur={[Function]}
                                style={
                                  Object {
                                    "left": 0,
                                    "opacity": 0,
                                    "pointerEvents": "none",
                                    "position": "absolute",
                                    "top": 0,
                                  }
                                }
                              >
                                <div
                                  className="emotion-33"
                                  id="dropdown-13-content"
                                  onBlur={[Function]}
                                  style={
                                    Object {
                                      "left": 0,
                                      "opacity": 0,
                                      "pointerEvents": "none",
                                      "position": "absolute",
                                      "top": 0,
                                    }
                                  }
                                >
                                  <div>
                                    <Styled(div)>
                                      <div
                                        className="emotion-15"
                                      >
                                        <FormField
                                          hideLabel={true}
                                          iconEnd={<IconSearch />}
                                          input={[Function]}
                                          label="Search"
                                          placeholder="Search..."
                                          requiredText="Required"
                                          type="search"
                                        >
                                          <Styled(div)>
                                            <div
                                              className="emotion-14"
                                            >
                                              <label>
                                                <Styled(div)
                                                  hideLabel={true}
                                                  key="formField-14-textWrapper"
                                                >
                                                  <div
                                                    className="emotion-4"
                                                  >
                                                    <span
                                                      id="formField-14-labelText"
                                                    >
                                                      Search
                                                    </span>
                                                  </div>
                                                </Styled(div)>
                                                <TextInput
                                                  iconEnd={<IconSearch />}
                                                  key="formField-14-control"
                                                  placeholder="Search..."
                                                  size="large"
                                                  type="search"
                                                >
                                                  <Styled(WithTheme(Themed(FauxControl)))
                                                    control={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "__emotion_base": "input",
                                                        "__emotion_forwardProp": undefined,
                                                        "__emotion_real": [Circular],
                                                        "__emotion_styles": Array [
                                                          [Function],
                                                        ],
                                                        "defaultProps": undefined,
                                                        "displayName": "Styled(input)",
                                                        "render": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    controlProps={
                                                      Object {
                                                        "aria-describedby": undefined,
                                                        "aria-invalid": undefined,
                                                        "aria-required": undefined,
                                                        "controlRef": undefined,
                                                        "disabled": undefined,
                                                        "placeholder": "Search...",
                                                        "readOnly": undefined,
                                                        "required": undefined,
                                                        "type": "search",
                                                      }
                                                    }
                                                    iconEnd={<IconSearch />}
                                                    size="large"
                                                  >
                                                    <WithTheme(Themed(FauxControl))
                                                      className="emotion-10"
                                                      control={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "__emotion_base": "input",
                                                          "__emotion_forwardProp": undefined,
                                                          "__emotion_real": [Circular],
                                                          "__emotion_styles": Array [
                                                            [Function],
                                                          ],
                                                          "defaultProps": undefined,
                                                          "displayName": "Styled(input)",
                                                          "render": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      controlProps={
                                                        Object {
                                                          "aria-describedby": undefined,
                                                          "aria-invalid": undefined,
                                                          "aria-required": undefined,
                                                          "controlRef": undefined,
                                                          "disabled": undefined,
                                                          "placeholder": "Search...",
                                                          "readOnly": undefined,
                                                          "required": undefined,
                                                          "type": "search",
                                                        }
                                                      }
                                                      iconEnd={<IconSearch />}
                                                      size="large"
                                                    >
                                                      <Themed(FauxControl)
                                                        className="emotion-10"
                                                        control={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "__emotion_base": "input",
                                                            "__emotion_forwardProp": undefined,
                                                            "__emotion_real": [Circular],
                                                            "__emotion_styles": Array [
                                                              [Function],
                                                            ],
                                                            "defaultProps": undefined,
                                                            "displayName": "Styled(input)",
                                                            "render": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        controlProps={
                                                          Object {
                                                            "aria-describedby": undefined,
                                                            "aria-invalid": undefined,
                                                            "aria-required": undefined,
                                                            "controlRef": undefined,
                                                            "disabled": undefined,
                                                            "placeholder": "Search...",
                                                            "readOnly": undefined,
                                                            "required": undefined,
                                                            "type": "search",
                                                          }
                                                        }
                                                        iconEnd={<IconSearch />}
                                                        size="large"
                                                      >
                                                        <ThemeProvider>
                                                          <ThemeProvider>
                                                            <FauxControl
                                                              className="emotion-10"
                                                              control={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "__emotion_base": "input",
                                                                  "__emotion_forwardProp": undefined,
                                                                  "__emotion_real": [Circular],
                                                                  "__emotion_styles": Array [
                                                                    [Function],
                                                                  ],
                                                                  "defaultProps": undefined,
                                                                  "displayName": "Styled(input)",
                                                                  "render": [Function],
                                                                  "withComponent": [Function],
                                                                }
                                                              }
                                                              controlProps={
                                                                Object {
                                                                  "aria-describedby": undefined,
                                                                  "aria-invalid": undefined,
                                                                  "aria-required": undefined,
                                                                  "controlRef": undefined,
                                                                  "disabled": undefined,
                                                                  "placeholder": "Search...",
                                                                  "readOnly": undefined,
                                                                  "required": undefined,
                                                                  "type": "search",
                                                                }
                                                              }
                                                              iconEnd={<IconSearch />}
                                                              size="large"
                                                            >
                                                              <Styled(div)
                                                                className="emotion-10"
                                                              >
                                                                <div
                                                                  className="emotion-9"
                                                                >
                                                                  <Styled(input)
                                                                    as={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "__emotion_base": "input",
                                                                        "__emotion_forwardProp": undefined,
                                                                        "__emotion_real": [Circular],
                                                                        "__emotion_styles": Array [
                                                                          [Function],
                                                                        ],
                                                                        "defaultProps": undefined,
                                                                        "displayName": "Styled(input)",
                                                                        "render": [Function],
                                                                        "withComponent": [Function],
                                                                      }
                                                                    }
                                                                    controlPropsIn={
                                                                      Object {
                                                                        "aria-describedby": undefined,
                                                                        "aria-invalid": undefined,
                                                                        "aria-required": undefined,
                                                                        "controlRef": undefined,
                                                                        "disabled": undefined,
                                                                        "placeholder": "Search...",
                                                                        "readOnly": undefined,
                                                                        "required": undefined,
                                                                        "type": "search",
                                                                      }
                                                                    }
                                                                    iconEnd={<IconSearch />}
                                                                    key="control"
                                                                    placeholder="Search..."
                                                                    size="large"
                                                                    type="search"
                                                                  >
                                                                    <Styled(input)
                                                                      className="emotion-6"
                                                                      controlPropsIn={
                                                                        Object {
                                                                          "aria-describedby": undefined,
                                                                          "aria-invalid": undefined,
                                                                          "aria-required": undefined,
                                                                          "controlRef": undefined,
                                                                          "disabled": undefined,
                                                                          "placeholder": "Search...",
                                                                          "readOnly": undefined,
                                                                          "required": undefined,
                                                                          "type": "search",
                                                                        }
                                                                      }
                                                                      iconEnd={<IconSearch />}
                                                                      placeholder="Search..."
                                                                      size="large"
                                                                      type="search"
                                                                    >
                                                                      <input
                                                                        className="emotion-5"
                                                                        placeholder="Search..."
                                                                        size="large"
                                                                        type="search"
                                                                      />
                                                                    </Styled(input)>
                                                                  </Styled(input)>
                                                                  <IconSearch
                                                                    key="iconEnd"
                                                                    size="1.5em"
                                                                  >
                                                                    <Icon
                                                                      rtl={false}
                                                                      size="1.5em"
                                                                    >
                                                                      <Styled(svg)
                                                                        aria-hidden={true}
                                                                        focusable="false"
                                                                        role="img"
                                                                        rtl={false}
                                                                        size="1.5em"
                                                                        viewBox="0 0 24 24"
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          className="emotion-7"
                                                                          focusable="false"
                                                                          role="img"
                                                                          viewBox="0 0 24 24"
                                                                        >
                                                                          <g>
                                                                            <path
                                                                              d="M15.5 14h-.79l-.28-.27A6.471 6.471 0 0 0 16 9.5 6.5 6.5 0 1 0 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
                                                                            />
                                                                          </g>
                                                                        </svg>
                                                                      </Styled(svg)>
                                                                    </Icon>
                                                                  </IconSearch>
                                                                  <Styled(div)>
                                                                    <div
                                                                      className="emotion-8"
                                                                    />
                                                                  </Styled(div)>
                                                                </div>
                                                              </Styled(div)>
                                                            </FauxControl>
                                                          </ThemeProvider>
                                                        </ThemeProvider>
                                                      </Themed(FauxControl)>
                                                    </WithTheme(Themed(FauxControl))>
                                                  </Styled(WithTheme(Themed(FauxControl)))>
                                                </TextInput>
                                              </label>
                                            </div>
                                          </Styled(div)>
                                        </FormField>
                                      </div>
                                    </Styled(div)>
                                    <Menu
                                      data={
                                        Array [
                                          Object {
                                            "text": "Light years",
                                          },
                                          Object {
                                            "text": "Star stuff",
                                          },
                                          Object {
                                            "text": "Encyclopaedia galactica",
                                          },
                                          Object {
                                            "text": "Cosmic ocean",
                                          },
                                        ]
                                      }
                                      id="dropdown-13-menu"
                                      item={[Function]}
                                      itemKey="text"
                                      role="menu"
                                    >
                                      <Styled(div)
                                        id="dropdown-13-menu"
                                        item={[Function]}
                                        itemKey="text"
                                        role="menu"
                                      >
                                        <div
                                          className="emotion-14"
                                          id="dropdown-13-menu"
                                          role="menu"
                                        >
                                          <MenuItem
                                            index={0}
                                            isHighlighted={false}
                                            item={
                                              Object {
                                                "text": "Light years",
                                              }
                                            }
                                            key="Light years"
                                            render={[Function]}
                                            text="Light years"
                                          >
                                            <MenuItem
                                              id="dropdown-13-item-0"
                                              index={0}
                                              isHighlighted={false}
                                              item={
                                                Object {
                                                  "text": "Light years",
                                                }
                                              }
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex={null}
                                              text="Light years"
                                            >
                                              <Styled(div)
                                                id="dropdown-13-item-0"
                                                index={0}
                                                isHighlighted={false}
                                                item={
                                                  Object {
                                                    "text": "Light years",
                                                  }
                                                }
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex={null}
                                                text="Light years"
                                              >
                                                <div
                                                  className="emotion-19"
                                                  id="dropdown-13-item-0"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  role="menuitem"
                                                  tabIndex={null}
                                                >
                                                  <Styled(span)>
                                                    <span
                                                      className="emotion-18"
                                                    >
                                                      <Styled(span)>
                                                        <span
                                                          className="emotion-17"
                                                        >
                                                          <Styled(span)>
                                                            <span
                                                              className="emotion-16"
                                                            >
                                                              Light years
                                                            </span>
                                                          </Styled(span)>
                                                        </span>
                                                      </Styled(span)>
                                                    </span>
                                                  </Styled(span)>
                                                </div>
                                              </Styled(div)>
                                            </MenuItem>
                                          </MenuItem>
                                          <MenuItem
                                            index={1}
                                            isHighlighted={false}
                                            item={
                                              Object {
                                                "text": "Star stuff",
                                              }
                                            }
                                            key="Star stuff"
                                            render={[Function]}
                                            text="Star stuff"
                                          >
                                            <MenuItem
                                              id="dropdown-13-item-1"
                                              index={1}
                                              isHighlighted={false}
                                              item={
                                                Object {
                                                  "text": "Star stuff",
                                                }
                                              }
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex={null}
                                              text="Star stuff"
                                            >
                                              <Styled(div)
                                                id="dropdown-13-item-1"
                                                index={1}
                                                isHighlighted={false}
                                                item={
                                                  Object {
                                                    "text": "Star stuff",
                                                  }
                                                }
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex={null}
                                                text="Star stuff"
                                              >
                                                <div
                                                  className="emotion-19"
                                                  id="dropdown-13-item-1"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  role="menuitem"
                                                  tabIndex={null}
                                                >
                                                  <Styled(span)>
                                                    <span
                                                      className="emotion-18"
                                                    >
                                                      <Styled(span)>
                                                        <span
                                                          className="emotion-17"
                                                        >
                                                          <Styled(span)>
                                                            <span
                                                              className="emotion-16"
                                                            >
                                                              Star stuff
                                                            </span>
                                                          </Styled(span)>
                                                        </span>
                                                      </Styled(span)>
                                                    </span>
                                                  </Styled(span)>
                                                </div>
                                              </Styled(div)>
                                            </MenuItem>
                                          </MenuItem>
                                          <MenuItem
                                            index={2}
                                            isHighlighted={false}
                                            item={
                                              Object {
                                                "text": "Encyclopaedia galactica",
                                              }
                                            }
                                            key="Encyclopaedia galactica"
                                            render={[Function]}
                                            text="Encyclopaedia galactica"
                                          >
                                            <MenuItem
                                              id="dropdown-13-item-2"
                                              index={2}
                                              isHighlighted={false}
                                              item={
                                                Object {
                                                  "text": "Encyclopaedia galactica",
                                                }
                                              }
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex={null}
                                              text="Encyclopaedia galactica"
                                            >
                                              <Styled(div)
                                                id="dropdown-13-item-2"
                                                index={2}
                                                isHighlighted={false}
                                                item={
                                                  Object {
                                                    "text": "Encyclopaedia galactica",
                                                  }
                                                }
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex={null}
                                                text="Encyclopaedia galactica"
                                              >
                                                <div
                                                  className="emotion-19"
                                                  id="dropdown-13-item-2"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  role="menuitem"
                                                  tabIndex={null}
                                                >
                                                  <Styled(span)>
                                                    <span
                                                      className="emotion-18"
                                                    >
                                                      <Styled(span)>
                                                        <span
                                                          className="emotion-17"
                                                        >
                                                          <Styled(span)>
                                                            <span
                                                              className="emotion-16"
                                                            >
                                                              Encyclopaedia galactica
                                                            </span>
                                                          </Styled(span)>
                                                        </span>
                                                      </Styled(span)>
                                                    </span>
                                                  </Styled(span)>
                                                </div>
                                              </Styled(div)>
                                            </MenuItem>
                                          </MenuItem>
                                          <MenuItem
                                            index={3}
                                            isHighlighted={false}
                                            item={
                                              Object {
                                                "text": "Cosmic ocean",
                                              }
                                            }
                                            key="Cosmic ocean"
                                            render={[Function]}
                                            text="Cosmic ocean"
                                          >
                                            <MenuItem
                                              id="dropdown-13-item-3"
                                              index={3}
                                              isHighlighted={false}
                                              item={
                                                Object {
                                                  "text": "Cosmic ocean",
                                                }
                                              }
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex={null}
                                              text="Cosmic ocean"
                                            >
                                              <Styled(div)
                                                id="dropdown-13-item-3"
                                                index={3}
                                                isHighlighted={false}
                                                item={
                                                  Object {
                                                    "text": "Cosmic ocean",
                                                  }
                                                }
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex={null}
                                                text="Cosmic ocean"
                                              >
                                                <div
                                                  className="emotion-19"
                                                  id="dropdown-13-item-3"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  role="menuitem"
                                                  tabIndex={null}
                                                >
                                                  <Styled(span)>
                                                    <span
                                                      className="emotion-18"
                                                    >
                                                      <Styled(span)>
                                                        <span
                                                          className="emotion-17"
                                                        >
                                                          <Styled(span)>
                                                            <span
                                                              className="emotion-16"
                                                            >
                                                              Cosmic ocean
                                                            </span>
                                                          </Styled(span)>
                                                        </span>
                                                      </Styled(span)>
                                                    </span>
                                                  </Styled(span)>
                                                </div>
                                              </Styled(div)>
                                            </MenuItem>
                                          </MenuItem>
                                        </div>
                                      </Styled(div)>
                                    </Menu>
                                  </div>
                                </div>
                              </Styled(div)>
                            </InnerPopper>
                          </Popper>
                        </RtlPopper>
                      </WithTheme(RtlPopper)>
                    </DropdownContent>
                  </WithForwardRef(DropdownContent)>
                  <EventListener
                    listeners={
                      Array [
                        Object {
                          "event": "click",
                          "handler": [Function],
                          "options": true,
                          "target": "document",
                        },
                        Object {
                          "event": "keydown",
                          "handler": [Function],
                          "options": true,
                          "target": "document",
                        },
                      ]
                    }
                  />
                </span>
              </Styled(span)>
            </Manager>
          </Popover>
        </Dropdown>
      </div>
    </Styled(div)>
  </DemoLayout>
</Component>
`;

exports[`Dropdown demo examples Snapshots: custom-trigger 1`] = `
.emotion-1 {
  display: inline-block;
}

<Component>
  <Dropdown
    data={
      Array [
        Object {
          "text": "Light years",
        },
        Object {
          "text": "Star stuff",
        },
        Object {
          "text": "Encyclopaedia galactica",
        },
        Object {
          "text": "Cosmic ocean",
        },
      ]
    }
    itemKey="text"
    placement="bottom-start"
  >
    <Popover
      content={[Function]}
      focusTriggerOnClose={true}
      hasArrow={true}
      id="dropdown-16"
      isOpen={false}
      itemKey="text"
      onClose={[Function]}
      onOpen={[Function]}
      placement="bottom-start"
      triggerRef={[Function]}
    >
      <Manager>
        <Styled(span)
          focusTriggerOnClose={true}
          hasArrow={true}
          id="dropdown-16"
          isOpen={false}
          itemKey="text"
          placement="bottom-start"
          triggerRef={[Function]}
        >
          <span
            className="emotion-1"
            id="dropdown-16"
          >
            <Reference>
              <InnerReference
                setReferenceNode={[Function]}
              >
                <Styled(button)
                  aria-describedby="dropdown-16-content"
                  aria-expanded={false}
                  aria-haspopup={true}
                  aria-owns="dropdown-16-content"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                >
                  <button
                    aria-describedby="dropdown-16-content"
                    aria-expanded={false}
                    aria-haspopup={true}
                    aria-owns="dropdown-16-content"
                    className="emotion-0"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                  >
                    Menu 
                    <span
                      aria-hidden="true"
                      role="img"
                    >
                      ▼
                    </span>
                  </button>
                </Styled(button)>
              </InnerReference>
            </Reference>
          </span>
        </Styled(span)>
      </Manager>
    </Popover>
  </Dropdown>
</Component>
`;

exports[`Dropdown demo examples Snapshots: data 1`] = `
.emotion-4 {
  display: inline-block;
}

.emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

<Component>
  <Dropdown
    data={
      Array [
        Object {
          "onClick": [Function],
          "text": "Menu item with onClick",
        },
        Object {
          "secondaryText": "Secondary text",
          "text": "Menu item",
        },
        Object {
          "iconStart": <IconCloud />,
          "text": "Icon at start",
        },
        Object {
          "iconEnd": <IconCloud />,
          "text": "Icon at end",
        },
        Object {
          "divider": true,
        },
        Object {
          "disabled": true,
          "onClick": [Function],
          "text": "Disabled menu item",
        },
        Object {
          "group": true,
          "title": "Group Title",
        },
        Object {
          "text": "Success variant",
          "variant": "success",
        },
        Object {
          "text": "Warning variant",
          "variant": "warning",
        },
        Object {
          "text": "Danger variant",
          "variant": "danger",
        },
      ]
    }
    itemKey="text"
    placement="bottom-start"
  >
    <Popover
      content={[Function]}
      focusTriggerOnClose={true}
      hasArrow={true}
      id="dropdown-2"
      isOpen={false}
      itemKey="text"
      onClose={[Function]}
      onOpen={[Function]}
      placement="bottom-start"
      triggerRef={[Function]}
    >
      <Manager>
        <Styled(span)
          focusTriggerOnClose={true}
          hasArrow={true}
          id="dropdown-2"
          isOpen={false}
          itemKey="text"
          placement="bottom-start"
          triggerRef={[Function]}
        >
          <span
            className="emotion-4"
            id="dropdown-2"
          >
            <WithForwardRef(PopoverTrigger)
              aria-describedby="dropdown-2-content"
              aria-expanded={false}
              aria-haspopup={true}
              aria-owns="dropdown-2-content"
              onBlur={[Function]}
              onClick={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              role="button"
              size="large"
            >
              <PopoverTrigger
                aria-describedby="dropdown-2-content"
                aria-expanded={false}
                aria-haspopup={true}
                aria-owns="dropdown-2-content"
                forwardedRef={[Function]}
                onBlur={[Function]}
                onClick={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                role="button"
                size="large"
              >
                <Reference>
                  <InnerReference
                    setReferenceNode={[Function]}
                  >
                    <Styled(span)>
                      <span
                        className="emotion-3"
                      >
                        <WithForwardRef(Button)
                          aria-describedby="dropdown-2-content"
                          aria-expanded={false}
                          aria-haspopup={true}
                          aria-owns="dropdown-2-content"
                          onBlur={[Function]}
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          role="button"
                          size="large"
                        >
                          <Button
                            aria-describedby="dropdown-2-content"
                            aria-expanded={false}
                            aria-haspopup={true}
                            aria-owns="dropdown-2-content"
                            forwardedRef={null}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            role="button"
                            size="large"
                          >
                            <Styled(button)
                              aria-describedby="dropdown-2-content"
                              aria-expanded={false}
                              aria-haspopup={true}
                              aria-owns="dropdown-2-content"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              role="button"
                              size="large"
                              text="Menu"
                            >
                              <button
                                aria-describedby="dropdown-2-content"
                                aria-expanded={false}
                                aria-haspopup={true}
                                aria-owns="dropdown-2-content"
                                className="emotion-2"
                                onBlur={[Function]}
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                role="button"
                              >
                                <Styled(span)>
                                  <span
                                    className="emotion-1"
                                  >
                                    <Styled(span)
                                      size="large"
                                    >
                                      <span
                                        className="emotion-0"
                                      >
                                        Menu
                                      </span>
                                    </Styled(span)>
                                  </span>
                                </Styled(span)>
                              </button>
                            </Styled(button)>
                          </Button>
                        </WithForwardRef(Button)>
                      </span>
                    </Styled(span)>
                  </InnerReference>
                </Reference>
              </PopoverTrigger>
            </WithForwardRef(PopoverTrigger)>
          </span>
        </Styled(span)>
      </Manager>
    </Popover>
  </Dropdown>
</Component>
`;

exports[`Dropdown demo examples Snapshots: disabled 1`] = `
.emotion-4 {
  display: inline-block;
}

.emotion-3 {
  display: inline-block;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

.emotion-2 {
  box-sizing: border-box;
  color: #afbacc;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: default;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:hover {
  color: #afbacc;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  color: #afbacc;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

<Dropdown
  data={
    Array [
      Object {
        "text": "Light years",
      },
      Object {
        "text": "Star stuff",
      },
      Object {
        "text": "Encyclopaedia galactica",
      },
      Object {
        "text": "Cosmic ocean",
      },
    ]
  }
  disabled={true}
  itemKey="text"
  placement="bottom-start"
>
  <Popover
    content={[Function]}
    disabled={true}
    focusTriggerOnClose={true}
    hasArrow={true}
    id="dropdown-9"
    isOpen={false}
    itemKey="text"
    onClose={[Function]}
    onOpen={[Function]}
    placement="bottom-start"
    triggerRef={[Function]}
  >
    <Manager>
      <Styled(span)
        focusTriggerOnClose={true}
        hasArrow={true}
        id="dropdown-9"
        isOpen={false}
        itemKey="text"
        placement="bottom-start"
        triggerRef={[Function]}
      >
        <span
          className="emotion-4"
          id="dropdown-9"
        >
          <WithForwardRef(PopoverTrigger)
            aria-describedby="dropdown-9-content"
            aria-disabled={true}
            aria-expanded={false}
            aria-haspopup={true}
            aria-owns="dropdown-9-content"
            disabled={true}
            onBlur={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            role="button"
            size="large"
          >
            <PopoverTrigger
              aria-describedby="dropdown-9-content"
              aria-disabled={true}
              aria-expanded={false}
              aria-haspopup={true}
              aria-owns="dropdown-9-content"
              disabled={true}
              forwardedRef={[Function]}
              onBlur={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              role="button"
              size="large"
            >
              <Reference>
                <InnerReference
                  setReferenceNode={[Function]}
                >
                  <Styled(span)>
                    <span
                      className="emotion-3"
                    >
                      <WithForwardRef(Button)
                        aria-describedby="dropdown-9-content"
                        aria-disabled={true}
                        aria-expanded={false}
                        aria-haspopup={true}
                        aria-owns="dropdown-9-content"
                        disabled={true}
                        onBlur={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        role="button"
                        size="large"
                      >
                        <Button
                          aria-describedby="dropdown-9-content"
                          aria-disabled={true}
                          aria-expanded={false}
                          aria-haspopup={true}
                          aria-owns="dropdown-9-content"
                          disabled={true}
                          forwardedRef={null}
                          onBlur={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          role="button"
                          size="large"
                        >
                          <Styled(button)
                            aria-describedby="dropdown-9-content"
                            aria-disabled={true}
                            aria-expanded={false}
                            aria-haspopup={true}
                            aria-owns="dropdown-9-content"
                            disabled={true}
                            onBlur={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            role="button"
                            size="large"
                            tabIndex={-1}
                            text="Menu"
                          >
                            <button
                              aria-describedby="dropdown-9-content"
                              aria-disabled={true}
                              aria-expanded={false}
                              aria-haspopup={true}
                              aria-owns="dropdown-9-content"
                              className="emotion-2"
                              disabled={true}
                              onBlur={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              role="button"
                              tabIndex={-1}
                            >
                              <Styled(span)>
                                <span
                                  className="emotion-1"
                                >
                                  <Styled(span)
                                    size="large"
                                  >
                                    <span
                                      className="emotion-0"
                                    >
                                      Menu
                                    </span>
                                  </Styled(span)>
                                </span>
                              </Styled(span)>
                            </button>
                          </Styled(button)>
                        </Button>
                      </WithForwardRef(Button)>
                    </span>
                  </Styled(span)>
                </InnerReference>
              </Reference>
            </PopoverTrigger>
          </WithForwardRef(PopoverTrigger)>
        </span>
      </Styled(span)>
    </Manager>
  </Popover>
</Dropdown>
`;

exports[`Dropdown demo examples Snapshots: on-open-close 1`] = `
.emotion-4 {
  display: inline-block;
}

.emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

<Component>
  <Dropdown
    data={
      Array [
        Object {
          "text": "Light years",
        },
        Object {
          "text": "Star stuff",
        },
        Object {
          "text": "Encyclopaedia galactica",
        },
        Object {
          "text": "Cosmic ocean",
        },
      ]
    }
    itemKey="text"
    onClose={[Function]}
    onOpen={[Function]}
    placement="bottom-start"
  >
    <Popover
      content={[Function]}
      focusTriggerOnClose={true}
      hasArrow={true}
      id="dropdown-8"
      isOpen={false}
      itemKey="text"
      onClose={[Function]}
      onOpen={[Function]}
      placement="bottom-start"
      triggerRef={[Function]}
    >
      <Manager>
        <Styled(span)
          focusTriggerOnClose={true}
          hasArrow={true}
          id="dropdown-8"
          isOpen={false}
          itemKey="text"
          placement="bottom-start"
          triggerRef={[Function]}
        >
          <span
            className="emotion-4"
            id="dropdown-8"
          >
            <WithForwardRef(PopoverTrigger)
              aria-describedby="dropdown-8-content"
              aria-expanded={false}
              aria-haspopup={true}
              aria-owns="dropdown-8-content"
              onBlur={[Function]}
              onClick={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              role="button"
              size="large"
            >
              <PopoverTrigger
                aria-describedby="dropdown-8-content"
                aria-expanded={false}
                aria-haspopup={true}
                aria-owns="dropdown-8-content"
                forwardedRef={[Function]}
                onBlur={[Function]}
                onClick={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                role="button"
                size="large"
              >
                <Reference>
                  <InnerReference
                    setReferenceNode={[Function]}
                  >
                    <Styled(span)>
                      <span
                        className="emotion-3"
                      >
                        <WithForwardRef(Button)
                          aria-describedby="dropdown-8-content"
                          aria-expanded={false}
                          aria-haspopup={true}
                          aria-owns="dropdown-8-content"
                          onBlur={[Function]}
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          role="button"
                          size="large"
                        >
                          <Button
                            aria-describedby="dropdown-8-content"
                            aria-expanded={false}
                            aria-haspopup={true}
                            aria-owns="dropdown-8-content"
                            forwardedRef={null}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            role="button"
                            size="large"
                          >
                            <Styled(button)
                              aria-describedby="dropdown-8-content"
                              aria-expanded={false}
                              aria-haspopup={true}
                              aria-owns="dropdown-8-content"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              role="button"
                              size="large"
                              text="Menu"
                            >
                              <button
                                aria-describedby="dropdown-8-content"
                                aria-expanded={false}
                                aria-haspopup={true}
                                aria-owns="dropdown-8-content"
                                className="emotion-2"
                                onBlur={[Function]}
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                role="button"
                              >
                                <Styled(span)>
                                  <span
                                    className="emotion-1"
                                  >
                                    <Styled(span)
                                      size="large"
                                    >
                                      <span
                                        className="emotion-0"
                                      >
                                        Menu
                                      </span>
                                    </Styled(span)>
                                  </span>
                                </Styled(span)>
                              </button>
                            </Styled(button)>
                          </Button>
                        </WithForwardRef(Button)>
                      </span>
                    </Styled(span)>
                  </InnerReference>
                </Reference>
              </PopoverTrigger>
            </WithForwardRef(PopoverTrigger)>
          </span>
        </Styled(span)>
      </Manager>
    </Popover>
  </Dropdown>
</Component>
`;

exports[`Dropdown demo examples Snapshots: overflow 1`] = `
.emotion-22 {
  display: inline-block;
}

.emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

.emotion-20 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.emotion-20 *,
.emotion-20 *::before,
.emotion-20 *::after {
  box-sizing: inherit;
}

.emotion-7 {
  color: #333840;
  cursor: pointer;
  display: block;
  font-weight: 400;
  padding: 0.5em 1em;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-7:focus {
  background-color: #f5f7fa;
  outline: 0;
}

.emotion-7:hover {
  background-color: #f5f7fa;
}

.emotion-7:active {
  background-color: #ebeff5;
}

.emotion-7[aria-selected="true"] {
  background-color: #f0f5fc;
  font-weight: 700;
}

.emotion-7[aria-selected="true"]:active {
  background-color: #accbfc;
}

.emotion-7 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.emotion-7 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-7 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  padding: 0.1875em 0 0.25em;
  white-space: normal;
  word-break: break-all;
}

.emotion-4 {
  font-size: 0.875em;
  margin-right: 0.5714285714285714em;
  word-break: break-word;
}

.emotion-21 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2),0 4px 8px 0 rgba(0,0,0,0.2);
  max-height: 30vh;
  overflow-y: auto;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  width: 14em;
  z-index: 100;
}

.emotion-21 *,
.emotion-21 *::before,
.emotion-21 *::after {
  box-sizing: inherit;
}

.emotion-21[data-placement^="top"] {
  margin-bottom: 5px;
}

.emotion-21[data-placement^="bottom"] {
  margin-top: 5px;
}

.emotion-21[data-placement^="left"] {
  margin-right: 5px;
}

.emotion-21[data-placement^="right"] {
  margin-left: 5px;
}

.emotion-21[data-out-of-boundaries] {
  visibility: hidden;
}

.emotion-23 {
  background-color: aliceblue;
  margin: 0 0 145px 0;
  overflow: hidden;
  padding: 25px;
}

<Styled(div)>
  <div
    className="emotion-23"
  >
    <Dropdown
      data={
        Array [
          Object {
            "text": "Light years",
          },
          Object {
            "text": "Star stuff",
          },
          Object {
            "text": "Encyclopaedia galactica",
          },
          Object {
            "text": "Cosmic ocean",
          },
        ]
      }
      isOpen={true}
      itemKey="text"
      placement="bottom-start"
    >
      <Popover
        content={[Function]}
        focusTriggerOnClose={true}
        hasArrow={true}
        id="dropdown-5"
        isOpen={true}
        itemKey="text"
        onClose={[Function]}
        onOpen={[Function]}
        placement="bottom-start"
        triggerRef={[Function]}
      >
        <Manager>
          <Styled(span)
            focusTriggerOnClose={true}
            hasArrow={true}
            id="dropdown-5"
            isOpen={true}
            itemKey="text"
            placement="bottom-start"
            triggerRef={[Function]}
          >
            <span
              className="emotion-22"
              id="dropdown-5"
            >
              <WithForwardRef(PopoverTrigger)
                aria-activedescendant="dropdown-5-menu"
                aria-describedby="dropdown-5-content"
                aria-expanded={true}
                aria-haspopup={true}
                aria-owns="dropdown-5-content"
                onBlur={[Function]}
                onClick={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                role="button"
                size="large"
              >
                <PopoverTrigger
                  aria-activedescendant="dropdown-5-menu"
                  aria-describedby="dropdown-5-content"
                  aria-expanded={true}
                  aria-haspopup={true}
                  aria-owns="dropdown-5-content"
                  forwardedRef={[Function]}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  role="button"
                  size="large"
                >
                  <Reference>
                    <InnerReference
                      setReferenceNode={[Function]}
                    >
                      <Styled(span)>
                        <span
                          className="emotion-3"
                        >
                          <WithForwardRef(Button)
                            aria-activedescendant="dropdown-5-menu"
                            aria-describedby="dropdown-5-content"
                            aria-expanded={true}
                            aria-haspopup={true}
                            aria-owns="dropdown-5-content"
                            onBlur={[Function]}
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            role="button"
                            size="large"
                          >
                            <Button
                              aria-activedescendant="dropdown-5-menu"
                              aria-describedby="dropdown-5-content"
                              aria-expanded={true}
                              aria-haspopup={true}
                              aria-owns="dropdown-5-content"
                              forwardedRef={null}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              role="button"
                              size="large"
                            >
                              <Styled(button)
                                aria-activedescendant="dropdown-5-menu"
                                aria-describedby="dropdown-5-content"
                                aria-expanded={true}
                                aria-haspopup={true}
                                aria-owns="dropdown-5-content"
                                onBlur={[Function]}
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                role="button"
                                size="large"
                                text="Menu"
                              >
                                <button
                                  aria-activedescendant="dropdown-5-menu"
                                  aria-describedby="dropdown-5-content"
                                  aria-expanded={true}
                                  aria-haspopup={true}
                                  aria-owns="dropdown-5-content"
                                  className="emotion-2"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  role="button"
                                >
                                  <Styled(span)>
                                    <span
                                      className="emotion-1"
                                    >
                                      <Styled(span)
                                        size="large"
                                      >
                                        <span
                                          className="emotion-0"
                                        >
                                          Menu
                                        </span>
                                      </Styled(span)>
                                    </span>
                                  </Styled(span)>
                                </button>
                              </Styled(button)>
                            </Button>
                          </WithForwardRef(Button)>
                        </span>
                      </Styled(span)>
                    </InnerReference>
                  </Reference>
                </PopoverTrigger>
              </WithForwardRef(PopoverTrigger)>
              <WithForwardRef(DropdownContent)
                hasArrow={true}
                id="dropdown-5-content"
                onBlur={[Function]}
                placement="bottom-start"
              >
                <DropdownContent
                  forwardedRef={[Function]}
                  hasArrow={true}
                  id="dropdown-5-content"
                  onBlur={[Function]}
                  placement="bottom-start"
                >
                  <WithTheme(RtlPopper)
                    placement="bottom-start"
                  >
                    <RtlPopper
                      placement="bottom-start"
                    >
                      <Popper
                        placement="bottom-start"
                      >
                        <InnerPopper
                          eventsEnabled={true}
                          placement="bottom-start"
                          positionFixed={false}
                          referenceElement={
                            .emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

<span
                              class="emotion-3"
                            >
                              <button
                                aria-activedescendant="dropdown-5-menu"
                                aria-describedby="dropdown-5-content"
                                aria-expanded="true"
                                aria-haspopup="true"
                                aria-owns="dropdown-5-content"
                                class="emotion-2"
                                role="button"
                              >
                                <span
                                  class="emotion-1"
                                >
                                  <span
                                    class="emotion-0"
                                  >
                                    Menu
                                  </span>
                                </span>
                              </button>
                            </span>
                          }
                        >
                          <Styled(div)
                            hasArrow={true}
                            id="dropdown-5-content"
                            onBlur={[Function]}
                            style={
                              Object {
                                "left": 0,
                                "opacity": 0,
                                "pointerEvents": "none",
                                "position": "absolute",
                                "top": 0,
                              }
                            }
                          >
                            <div
                              className="emotion-21"
                              id="dropdown-5-content"
                              onBlur={[Function]}
                              style={
                                Object {
                                  "left": 0,
                                  "opacity": 0,
                                  "pointerEvents": "none",
                                  "position": "absolute",
                                  "top": 0,
                                }
                              }
                            >
                              <Menu
                                data={
                                  Array [
                                    Object {
                                      "text": "Light years",
                                    },
                                    Object {
                                      "text": "Star stuff",
                                    },
                                    Object {
                                      "text": "Encyclopaedia galactica",
                                    },
                                    Object {
                                      "text": "Cosmic ocean",
                                    },
                                  ]
                                }
                                id="dropdown-5-menu"
                                item={[Function]}
                                itemKey="text"
                                role="menu"
                              >
                                <Styled(div)
                                  id="dropdown-5-menu"
                                  item={[Function]}
                                  itemKey="text"
                                  role="menu"
                                >
                                  <div
                                    className="emotion-20"
                                    id="dropdown-5-menu"
                                    role="menu"
                                  >
                                    <MenuItem
                                      index={0}
                                      isHighlighted={false}
                                      item={
                                        Object {
                                          "text": "Light years",
                                        }
                                      }
                                      key="Light years"
                                      render={[Function]}
                                      text="Light years"
                                    >
                                      <MenuItem
                                        id="dropdown-5-item-0"
                                        index={0}
                                        isHighlighted={false}
                                        item={
                                          Object {
                                            "text": "Light years",
                                          }
                                        }
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        role="menuitem"
                                        tabIndex={null}
                                        text="Light years"
                                      >
                                        <Styled(div)
                                          id="dropdown-5-item-0"
                                          index={0}
                                          isHighlighted={false}
                                          item={
                                            Object {
                                              "text": "Light years",
                                            }
                                          }
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          role="menuitem"
                                          tabIndex={null}
                                          text="Light years"
                                        >
                                          <div
                                            className="emotion-7"
                                            id="dropdown-5-item-0"
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            role="menuitem"
                                            tabIndex={null}
                                          >
                                            <Styled(span)>
                                              <span
                                                className="emotion-6"
                                              >
                                                <Styled(span)>
                                                  <span
                                                    className="emotion-5"
                                                  >
                                                    <Styled(span)>
                                                      <span
                                                        className="emotion-4"
                                                      >
                                                        Light years
                                                      </span>
                                                    </Styled(span)>
                                                  </span>
                                                </Styled(span)>
                                              </span>
                                            </Styled(span)>
                                          </div>
                                        </Styled(div)>
                                      </MenuItem>
                                    </MenuItem>
                                    <MenuItem
                                      index={1}
                                      isHighlighted={false}
                                      item={
                                        Object {
                                          "text": "Star stuff",
                                        }
                                      }
                                      key="Star stuff"
                                      render={[Function]}
                                      text="Star stuff"
                                    >
                                      <MenuItem
                                        id="dropdown-5-item-1"
                                        index={1}
                                        isHighlighted={false}
                                        item={
                                          Object {
                                            "text": "Star stuff",
                                          }
                                        }
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        role="menuitem"
                                        tabIndex={null}
                                        text="Star stuff"
                                      >
                                        <Styled(div)
                                          id="dropdown-5-item-1"
                                          index={1}
                                          isHighlighted={false}
                                          item={
                                            Object {
                                              "text": "Star stuff",
                                            }
                                          }
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          role="menuitem"
                                          tabIndex={null}
                                          text="Star stuff"
                                        >
                                          <div
                                            className="emotion-7"
                                            id="dropdown-5-item-1"
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            role="menuitem"
                                            tabIndex={null}
                                          >
                                            <Styled(span)>
                                              <span
                                                className="emotion-6"
                                              >
                                                <Styled(span)>
                                                  <span
                                                    className="emotion-5"
                                                  >
                                                    <Styled(span)>
                                                      <span
                                                        className="emotion-4"
                                                      >
                                                        Star stuff
                                                      </span>
                                                    </Styled(span)>
                                                  </span>
                                                </Styled(span)>
                                              </span>
                                            </Styled(span)>
                                          </div>
                                        </Styled(div)>
                                      </MenuItem>
                                    </MenuItem>
                                    <MenuItem
                                      index={2}
                                      isHighlighted={false}
                                      item={
                                        Object {
                                          "text": "Encyclopaedia galactica",
                                        }
                                      }
                                      key="Encyclopaedia galactica"
                                      render={[Function]}
                                      text="Encyclopaedia galactica"
                                    >
                                      <MenuItem
                                        id="dropdown-5-item-2"
                                        index={2}
                                        isHighlighted={false}
                                        item={
                                          Object {
                                            "text": "Encyclopaedia galactica",
                                          }
                                        }
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        role="menuitem"
                                        tabIndex={null}
                                        text="Encyclopaedia galactica"
                                      >
                                        <Styled(div)
                                          id="dropdown-5-item-2"
                                          index={2}
                                          isHighlighted={false}
                                          item={
                                            Object {
                                              "text": "Encyclopaedia galactica",
                                            }
                                          }
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          role="menuitem"
                                          tabIndex={null}
                                          text="Encyclopaedia galactica"
                                        >
                                          <div
                                            className="emotion-7"
                                            id="dropdown-5-item-2"
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            role="menuitem"
                                            tabIndex={null}
                                          >
                                            <Styled(span)>
                                              <span
                                                className="emotion-6"
                                              >
                                                <Styled(span)>
                                                  <span
                                                    className="emotion-5"
                                                  >
                                                    <Styled(span)>
                                                      <span
                                                        className="emotion-4"
                                                      >
                                                        Encyclopaedia galactica
                                                      </span>
                                                    </Styled(span)>
                                                  </span>
                                                </Styled(span)>
                                              </span>
                                            </Styled(span)>
                                          </div>
                                        </Styled(div)>
                                      </MenuItem>
                                    </MenuItem>
                                    <MenuItem
                                      index={3}
                                      isHighlighted={false}
                                      item={
                                        Object {
                                          "text": "Cosmic ocean",
                                        }
                                      }
                                      key="Cosmic ocean"
                                      render={[Function]}
                                      text="Cosmic ocean"
                                    >
                                      <MenuItem
                                        id="dropdown-5-item-3"
                                        index={3}
                                        isHighlighted={false}
                                        item={
                                          Object {
                                            "text": "Cosmic ocean",
                                          }
                                        }
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        role="menuitem"
                                        tabIndex={null}
                                        text="Cosmic ocean"
                                      >
                                        <Styled(div)
                                          id="dropdown-5-item-3"
                                          index={3}
                                          isHighlighted={false}
                                          item={
                                            Object {
                                              "text": "Cosmic ocean",
                                            }
                                          }
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          role="menuitem"
                                          tabIndex={null}
                                          text="Cosmic ocean"
                                        >
                                          <div
                                            className="emotion-7"
                                            id="dropdown-5-item-3"
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            role="menuitem"
                                            tabIndex={null}
                                          >
                                            <Styled(span)>
                                              <span
                                                className="emotion-6"
                                              >
                                                <Styled(span)>
                                                  <span
                                                    className="emotion-5"
                                                  >
                                                    <Styled(span)>
                                                      <span
                                                        className="emotion-4"
                                                      >
                                                        Cosmic ocean
                                                      </span>
                                                    </Styled(span)>
                                                  </span>
                                                </Styled(span)>
                                              </span>
                                            </Styled(span)>
                                          </div>
                                        </Styled(div)>
                                      </MenuItem>
                                    </MenuItem>
                                  </div>
                                </Styled(div)>
                              </Menu>
                            </div>
                          </Styled(div)>
                        </InnerPopper>
                      </Popper>
                    </RtlPopper>
                  </WithTheme(RtlPopper)>
                </DropdownContent>
              </WithForwardRef(DropdownContent)>
              <EventListener
                listeners={
                  Array [
                    Object {
                      "event": "click",
                      "handler": [Function],
                      "options": true,
                      "target": "document",
                    },
                    Object {
                      "event": "keydown",
                      "handler": [Function],
                      "options": true,
                      "target": "document",
                    },
                  ]
                }
              />
            </span>
          </Styled(span)>
        </Manager>
      </Popover>
    </Dropdown>
  </div>
</Styled(div)>
`;

exports[`Dropdown demo examples Snapshots: placement 1`] = `
.emotion-22 {
  display: inline-block;
}

.emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

.emotion-20 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.emotion-20 *,
.emotion-20 *::before,
.emotion-20 *::after {
  box-sizing: inherit;
}

.emotion-7 {
  color: #333840;
  cursor: pointer;
  display: block;
  font-weight: 400;
  padding: 0.5em 1em;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-7:focus {
  background-color: #f5f7fa;
  outline: 0;
}

.emotion-7:hover {
  background-color: #f5f7fa;
}

.emotion-7:active {
  background-color: #ebeff5;
}

.emotion-7[aria-selected="true"] {
  background-color: #f0f5fc;
  font-weight: 700;
}

.emotion-7[aria-selected="true"]:active {
  background-color: #accbfc;
}

.emotion-7 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.emotion-7 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-7 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  padding: 0.1875em 0 0.25em;
  white-space: normal;
  word-break: break-all;
}

.emotion-4 {
  font-size: 0.875em;
  margin-right: 0.5714285714285714em;
  word-break: break-word;
}

.emotion-23 {
  height: 400px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.emotion-21 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2),0 4px 8px 0 rgba(0,0,0,0.2);
  max-height: 30vh;
  overflow-y: auto;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  width: 14em;
  z-index: 100;
}

.emotion-21 *,
.emotion-21 *::before,
.emotion-21 *::after {
  box-sizing: inherit;
}

.emotion-21[data-placement^="top"] {
  margin-bottom: 5px;
}

.emotion-21[data-placement^="bottom"] {
  margin-top: 5px;
}

.emotion-21[data-placement^="left"] {
  margin-right: 5px;
}

.emotion-21[data-placement^="right"] {
  margin-left: 5px;
}

.emotion-21[data-out-of-boundaries] {
  visibility: hidden;
}

<DemoLayout>
  <Styled(div)>
    <div
      className="emotion-23"
    >
      <Dropdown
        data={
          Array [
            Object {
              "text": "Light years",
            },
            Object {
              "text": "Star stuff",
            },
            Object {
              "text": "Encyclopaedia galactica",
            },
            Object {
              "text": "Cosmic ocean",
            },
          ]
        }
        isOpen={true}
        itemKey="text"
        placement="bottom-start"
      >
        <Popover
          content={[Function]}
          focusTriggerOnClose={true}
          hasArrow={true}
          id="dropdown-4"
          isOpen={true}
          itemKey="text"
          onClose={[Function]}
          onOpen={[Function]}
          placement="bottom-start"
          triggerRef={[Function]}
        >
          <Manager>
            <Styled(span)
              focusTriggerOnClose={true}
              hasArrow={true}
              id="dropdown-4"
              isOpen={true}
              itemKey="text"
              placement="bottom-start"
              triggerRef={[Function]}
            >
              <span
                className="emotion-22"
                id="dropdown-4"
              >
                <WithForwardRef(PopoverTrigger)
                  aria-activedescendant="dropdown-4-menu"
                  aria-describedby="dropdown-4-content"
                  aria-expanded={true}
                  aria-haspopup={true}
                  aria-owns="dropdown-4-content"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  role="button"
                  size="large"
                >
                  <PopoverTrigger
                    aria-activedescendant="dropdown-4-menu"
                    aria-describedby="dropdown-4-content"
                    aria-expanded={true}
                    aria-haspopup={true}
                    aria-owns="dropdown-4-content"
                    forwardedRef={[Function]}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    role="button"
                    size="large"
                  >
                    <Reference>
                      <InnerReference
                        setReferenceNode={[Function]}
                      >
                        <Styled(span)>
                          <span
                            className="emotion-3"
                          >
                            <WithForwardRef(Button)
                              aria-activedescendant="dropdown-4-menu"
                              aria-describedby="dropdown-4-content"
                              aria-expanded={true}
                              aria-haspopup={true}
                              aria-owns="dropdown-4-content"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              role="button"
                              size="large"
                            >
                              <Button
                                aria-activedescendant="dropdown-4-menu"
                                aria-describedby="dropdown-4-content"
                                aria-expanded={true}
                                aria-haspopup={true}
                                aria-owns="dropdown-4-content"
                                forwardedRef={null}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                role="button"
                                size="large"
                              >
                                <Styled(button)
                                  aria-activedescendant="dropdown-4-menu"
                                  aria-describedby="dropdown-4-content"
                                  aria-expanded={true}
                                  aria-haspopup={true}
                                  aria-owns="dropdown-4-content"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  role="button"
                                  size="large"
                                  text="Menu"
                                >
                                  <button
                                    aria-activedescendant="dropdown-4-menu"
                                    aria-describedby="dropdown-4-content"
                                    aria-expanded={true}
                                    aria-haspopup={true}
                                    aria-owns="dropdown-4-content"
                                    className="emotion-2"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    role="button"
                                  >
                                    <Styled(span)>
                                      <span
                                        className="emotion-1"
                                      >
                                        <Styled(span)
                                          size="large"
                                        >
                                          <span
                                            className="emotion-0"
                                          >
                                            Menu
                                          </span>
                                        </Styled(span)>
                                      </span>
                                    </Styled(span)>
                                  </button>
                                </Styled(button)>
                              </Button>
                            </WithForwardRef(Button)>
                          </span>
                        </Styled(span)>
                      </InnerReference>
                    </Reference>
                  </PopoverTrigger>
                </WithForwardRef(PopoverTrigger)>
                <WithForwardRef(DropdownContent)
                  hasArrow={true}
                  id="dropdown-4-content"
                  onBlur={[Function]}
                  placement="bottom-start"
                >
                  <DropdownContent
                    forwardedRef={[Function]}
                    hasArrow={true}
                    id="dropdown-4-content"
                    onBlur={[Function]}
                    placement="bottom-start"
                  >
                    <WithTheme(RtlPopper)
                      placement="bottom-start"
                    >
                      <RtlPopper
                        placement="bottom-start"
                      >
                        <Popper
                          placement="bottom-start"
                        >
                          <InnerPopper
                            eventsEnabled={true}
                            placement="bottom-start"
                            positionFixed={false}
                            referenceElement={
                              .emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

<span
                                class="emotion-3"
                              >
                                <button
                                  aria-activedescendant="dropdown-4-menu"
                                  aria-describedby="dropdown-4-content"
                                  aria-expanded="true"
                                  aria-haspopup="true"
                                  aria-owns="dropdown-4-content"
                                  class="emotion-2"
                                  role="button"
                                >
                                  <span
                                    class="emotion-1"
                                  >
                                    <span
                                      class="emotion-0"
                                    >
                                      Menu
                                    </span>
                                  </span>
                                </button>
                              </span>
                            }
                          >
                            <Styled(div)
                              hasArrow={true}
                              id="dropdown-4-content"
                              onBlur={[Function]}
                              style={
                                Object {
                                  "left": 0,
                                  "opacity": 0,
                                  "pointerEvents": "none",
                                  "position": "absolute",
                                  "top": 0,
                                }
                              }
                            >
                              <div
                                className="emotion-21"
                                id="dropdown-4-content"
                                onBlur={[Function]}
                                style={
                                  Object {
                                    "left": 0,
                                    "opacity": 0,
                                    "pointerEvents": "none",
                                    "position": "absolute",
                                    "top": 0,
                                  }
                                }
                              >
                                <Menu
                                  data={
                                    Array [
                                      Object {
                                        "text": "Light years",
                                      },
                                      Object {
                                        "text": "Star stuff",
                                      },
                                      Object {
                                        "text": "Encyclopaedia galactica",
                                      },
                                      Object {
                                        "text": "Cosmic ocean",
                                      },
                                    ]
                                  }
                                  id="dropdown-4-menu"
                                  item={[Function]}
                                  itemKey="text"
                                  role="menu"
                                >
                                  <Styled(div)
                                    id="dropdown-4-menu"
                                    item={[Function]}
                                    itemKey="text"
                                    role="menu"
                                  >
                                    <div
                                      className="emotion-20"
                                      id="dropdown-4-menu"
                                      role="menu"
                                    >
                                      <MenuItem
                                        index={0}
                                        isHighlighted={false}
                                        item={
                                          Object {
                                            "text": "Light years",
                                          }
                                        }
                                        key="Light years"
                                        render={[Function]}
                                        text="Light years"
                                      >
                                        <MenuItem
                                          id="dropdown-4-item-0"
                                          index={0}
                                          isHighlighted={false}
                                          item={
                                            Object {
                                              "text": "Light years",
                                            }
                                          }
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          role="menuitem"
                                          tabIndex={null}
                                          text="Light years"
                                        >
                                          <Styled(div)
                                            id="dropdown-4-item-0"
                                            index={0}
                                            isHighlighted={false}
                                            item={
                                              Object {
                                                "text": "Light years",
                                              }
                                            }
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            role="menuitem"
                                            tabIndex={null}
                                            text="Light years"
                                          >
                                            <div
                                              className="emotion-7"
                                              id="dropdown-4-item-0"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex={null}
                                            >
                                              <Styled(span)>
                                                <span
                                                  className="emotion-6"
                                                >
                                                  <Styled(span)>
                                                    <span
                                                      className="emotion-5"
                                                    >
                                                      <Styled(span)>
                                                        <span
                                                          className="emotion-4"
                                                        >
                                                          Light years
                                                        </span>
                                                      </Styled(span)>
                                                    </span>
                                                  </Styled(span)>
                                                </span>
                                              </Styled(span)>
                                            </div>
                                          </Styled(div)>
                                        </MenuItem>
                                      </MenuItem>
                                      <MenuItem
                                        index={1}
                                        isHighlighted={false}
                                        item={
                                          Object {
                                            "text": "Star stuff",
                                          }
                                        }
                                        key="Star stuff"
                                        render={[Function]}
                                        text="Star stuff"
                                      >
                                        <MenuItem
                                          id="dropdown-4-item-1"
                                          index={1}
                                          isHighlighted={false}
                                          item={
                                            Object {
                                              "text": "Star stuff",
                                            }
                                          }
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          role="menuitem"
                                          tabIndex={null}
                                          text="Star stuff"
                                        >
                                          <Styled(div)
                                            id="dropdown-4-item-1"
                                            index={1}
                                            isHighlighted={false}
                                            item={
                                              Object {
                                                "text": "Star stuff",
                                              }
                                            }
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            role="menuitem"
                                            tabIndex={null}
                                            text="Star stuff"
                                          >
                                            <div
                                              className="emotion-7"
                                              id="dropdown-4-item-1"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex={null}
                                            >
                                              <Styled(span)>
                                                <span
                                                  className="emotion-6"
                                                >
                                                  <Styled(span)>
                                                    <span
                                                      className="emotion-5"
                                                    >
                                                      <Styled(span)>
                                                        <span
                                                          className="emotion-4"
                                                        >
                                                          Star stuff
                                                        </span>
                                                      </Styled(span)>
                                                    </span>
                                                  </Styled(span)>
                                                </span>
                                              </Styled(span)>
                                            </div>
                                          </Styled(div)>
                                        </MenuItem>
                                      </MenuItem>
                                      <MenuItem
                                        index={2}
                                        isHighlighted={false}
                                        item={
                                          Object {
                                            "text": "Encyclopaedia galactica",
                                          }
                                        }
                                        key="Encyclopaedia galactica"
                                        render={[Function]}
                                        text="Encyclopaedia galactica"
                                      >
                                        <MenuItem
                                          id="dropdown-4-item-2"
                                          index={2}
                                          isHighlighted={false}
                                          item={
                                            Object {
                                              "text": "Encyclopaedia galactica",
                                            }
                                          }
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          role="menuitem"
                                          tabIndex={null}
                                          text="Encyclopaedia galactica"
                                        >
                                          <Styled(div)
                                            id="dropdown-4-item-2"
                                            index={2}
                                            isHighlighted={false}
                                            item={
                                              Object {
                                                "text": "Encyclopaedia galactica",
                                              }
                                            }
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            role="menuitem"
                                            tabIndex={null}
                                            text="Encyclopaedia galactica"
                                          >
                                            <div
                                              className="emotion-7"
                                              id="dropdown-4-item-2"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex={null}
                                            >
                                              <Styled(span)>
                                                <span
                                                  className="emotion-6"
                                                >
                                                  <Styled(span)>
                                                    <span
                                                      className="emotion-5"
                                                    >
                                                      <Styled(span)>
                                                        <span
                                                          className="emotion-4"
                                                        >
                                                          Encyclopaedia galactica
                                                        </span>
                                                      </Styled(span)>
                                                    </span>
                                                  </Styled(span)>
                                                </span>
                                              </Styled(span)>
                                            </div>
                                          </Styled(div)>
                                        </MenuItem>
                                      </MenuItem>
                                      <MenuItem
                                        index={3}
                                        isHighlighted={false}
                                        item={
                                          Object {
                                            "text": "Cosmic ocean",
                                          }
                                        }
                                        key="Cosmic ocean"
                                        render={[Function]}
                                        text="Cosmic ocean"
                                      >
                                        <MenuItem
                                          id="dropdown-4-item-3"
                                          index={3}
                                          isHighlighted={false}
                                          item={
                                            Object {
                                              "text": "Cosmic ocean",
                                            }
                                          }
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          role="menuitem"
                                          tabIndex={null}
                                          text="Cosmic ocean"
                                        >
                                          <Styled(div)
                                            id="dropdown-4-item-3"
                                            index={3}
                                            isHighlighted={false}
                                            item={
                                              Object {
                                                "text": "Cosmic ocean",
                                              }
                                            }
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            role="menuitem"
                                            tabIndex={null}
                                            text="Cosmic ocean"
                                          >
                                            <div
                                              className="emotion-7"
                                              id="dropdown-4-item-3"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex={null}
                                            >
                                              <Styled(span)>
                                                <span
                                                  className="emotion-6"
                                                >
                                                  <Styled(span)>
                                                    <span
                                                      className="emotion-5"
                                                    >
                                                      <Styled(span)>
                                                        <span
                                                          className="emotion-4"
                                                        >
                                                          Cosmic ocean
                                                        </span>
                                                      </Styled(span)>
                                                    </span>
                                                  </Styled(span)>
                                                </span>
                                              </Styled(span)>
                                            </div>
                                          </Styled(div)>
                                        </MenuItem>
                                      </MenuItem>
                                    </div>
                                  </Styled(div)>
                                </Menu>
                              </div>
                            </Styled(div)>
                          </InnerPopper>
                        </Popper>
                      </RtlPopper>
                    </WithTheme(RtlPopper)>
                  </DropdownContent>
                </WithForwardRef(DropdownContent)>
                <EventListener
                  listeners={
                    Array [
                      Object {
                        "event": "click",
                        "handler": [Function],
                        "options": true,
                        "target": "document",
                      },
                      Object {
                        "event": "keydown",
                        "handler": [Function],
                        "options": true,
                        "target": "document",
                      },
                    ]
                  }
                />
              </span>
            </Styled(span)>
          </Manager>
        </Popover>
      </Dropdown>
    </div>
  </Styled(div)>
</DemoLayout>
`;

exports[`Dropdown demo examples Snapshots: portal 1`] = `
.emotion-22 {
  display: inline-block;
}

.emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

.emotion-20 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.emotion-20 *,
.emotion-20 *::before,
.emotion-20 *::after {
  box-sizing: inherit;
}

.emotion-7 {
  color: #333840;
  cursor: pointer;
  display: block;
  font-weight: 400;
  padding: 0.5em 1em;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-7:focus {
  background-color: #f5f7fa;
  outline: 0;
}

.emotion-7:hover {
  background-color: #f5f7fa;
}

.emotion-7:active {
  background-color: #ebeff5;
}

.emotion-7[aria-selected="true"] {
  background-color: #f0f5fc;
  font-weight: 700;
}

.emotion-7[aria-selected="true"]:active {
  background-color: #accbfc;
}

.emotion-7 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.emotion-7 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-7 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  padding: 0.1875em 0 0.25em;
  white-space: normal;
  word-break: break-all;
}

.emotion-4 {
  font-size: 0.875em;
  margin-right: 0.5714285714285714em;
  word-break: break-word;
}

.emotion-21 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2),0 4px 8px 0 rgba(0,0,0,0.2);
  max-height: 30vh;
  overflow-y: auto;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  width: 14em;
  z-index: 100;
}

.emotion-21 *,
.emotion-21 *::before,
.emotion-21 *::after {
  box-sizing: inherit;
}

.emotion-21[data-placement^="top"] {
  margin-bottom: 5px;
}

.emotion-21[data-placement^="bottom"] {
  margin-top: 5px;
}

.emotion-21[data-placement^="left"] {
  margin-right: 5px;
}

.emotion-21[data-placement^="right"] {
  margin-left: 5px;
}

.emotion-21[data-out-of-boundaries] {
  visibility: hidden;
}

.emotion-31 {
  position: relative;
}

.emotion-28 {
  left: 0;
  position: absolute;
  top: 0;
}

.emotion-27 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: transparent;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 1.5em;
  margin: 0;
  min-width: 1.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
  left: 0;
  position: absolute;
  top: 0;
}

.emotion-27 *,
.emotion-27 *::before,
.emotion-27 *::after {
  box-sizing: inherit;
}

.emotion-27:focus {
  border-color: #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-27:hover {
  background-color: #f5f7fa;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-27:focus:active,
.emotion-27:focus:hover {
  border-color: #1d5bbf;
}

.emotion-27:active {
  background-color: #ebeff5;
  color: #3272d9;
}

.emotion-27::-moz-focus-inner {
  border: 0;
}

.emotion-27 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-27 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-27 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-27 [role="img"]:only-child {
  margin: 0;
}

.emotion-25 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.75em;
  line-height: 2em;
}

.emotion-24 {
  background-color: aliceblue;
  height: 360px;
  overflow: auto;
  position: relative;
}

.emotion-23 {
  height: 860px;
  width: 300vw;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

<ScrollBox
  autoCenter={true}
  height={360}
>
  <Styled(div)>
    <div
      className="emotion-31"
    >
      <Styled(div)
        height={360}
      >
        <div
          className="emotion-24"
          height={360}
        >
          <Styled(div)
            scrollAreaHeight={360}
          >
            <div
              className="emotion-23"
            >
              <span>
                <Dropdown
                  data={
                    Array [
                      Object {
                        "text": "Light years",
                      },
                      Object {
                        "text": "Star stuff",
                      },
                      Object {
                        "text": "Encyclopaedia galactica",
                      },
                      Object {
                        "text": "Cosmic ocean",
                      },
                    ]
                  }
                  isOpen={true}
                  itemKey="text"
                  modifiers={
                    Object {
                      "preventOverflow": Object {
                        "escapeWithReference": true,
                      },
                    }
                  }
                  placement="bottom-start"
                  usePortal={true}
                >
                  <Popover
                    content={[Function]}
                    focusTriggerOnClose={true}
                    hasArrow={true}
                    id="dropdown-7"
                    isOpen={true}
                    itemKey="text"
                    modifiers={
                      Object {
                        "preventOverflow": Object {
                          "escapeWithReference": true,
                        },
                      }
                    }
                    onClose={[Function]}
                    onOpen={[Function]}
                    placement="bottom-start"
                    triggerRef={[Function]}
                    usePortal={true}
                  >
                    <Manager>
                      <Styled(span)
                        focusTriggerOnClose={true}
                        hasArrow={true}
                        id="dropdown-7"
                        isOpen={true}
                        itemKey="text"
                        placement="bottom-start"
                        triggerRef={[Function]}
                        usePortal={true}
                      >
                        <span
                          className="emotion-22"
                          id="dropdown-7"
                        >
                          <WithForwardRef(PopoverTrigger)
                            aria-activedescendant="dropdown-7-menu"
                            aria-describedby="dropdown-7-content"
                            aria-expanded={true}
                            aria-haspopup={true}
                            aria-owns="dropdown-7-content"
                            onBlur={[Function]}
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            role="button"
                            size="large"
                          >
                            <PopoverTrigger
                              aria-activedescendant="dropdown-7-menu"
                              aria-describedby="dropdown-7-content"
                              aria-expanded={true}
                              aria-haspopup={true}
                              aria-owns="dropdown-7-content"
                              forwardedRef={[Function]}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              role="button"
                              size="large"
                            >
                              <Reference>
                                <InnerReference
                                  setReferenceNode={[Function]}
                                >
                                  <Styled(span)>
                                    <span
                                      className="emotion-3"
                                    >
                                      <WithForwardRef(Button)
                                        aria-activedescendant="dropdown-7-menu"
                                        aria-describedby="dropdown-7-content"
                                        aria-expanded={true}
                                        aria-haspopup={true}
                                        aria-owns="dropdown-7-content"
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        role="button"
                                        size="large"
                                      >
                                        <Button
                                          aria-activedescendant="dropdown-7-menu"
                                          aria-describedby="dropdown-7-content"
                                          aria-expanded={true}
                                          aria-haspopup={true}
                                          aria-owns="dropdown-7-content"
                                          forwardedRef={null}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          role="button"
                                          size="large"
                                        >
                                          <Styled(button)
                                            aria-activedescendant="dropdown-7-menu"
                                            aria-describedby="dropdown-7-content"
                                            aria-expanded={true}
                                            aria-haspopup={true}
                                            aria-owns="dropdown-7-content"
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            role="button"
                                            size="large"
                                            text="Menu"
                                          >
                                            <button
                                              aria-activedescendant="dropdown-7-menu"
                                              aria-describedby="dropdown-7-content"
                                              aria-expanded={true}
                                              aria-haspopup={true}
                                              aria-owns="dropdown-7-content"
                                              className="emotion-2"
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              role="button"
                                            >
                                              <Styled(span)>
                                                <span
                                                  className="emotion-1"
                                                >
                                                  <Styled(span)
                                                    size="large"
                                                  >
                                                    <span
                                                      className="emotion-0"
                                                    >
                                                      Menu
                                                    </span>
                                                  </Styled(span)>
                                                </span>
                                              </Styled(span)>
                                            </button>
                                          </Styled(button)>
                                        </Button>
                                      </WithForwardRef(Button)>
                                    </span>
                                  </Styled(span)>
                                </InnerReference>
                              </Reference>
                            </PopoverTrigger>
                          </WithForwardRef(PopoverTrigger)>
                          <Portal>
                            <Portal
                              containerInfo={
                                .emotion-16 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.emotion-16 *,
.emotion-16 *::before,
.emotion-16 *::after {
  box-sizing: inherit;
}

.emotion-3 {
  color: #333840;
  cursor: pointer;
  display: block;
  font-weight: 400;
  padding: 0.5em 1em;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-3:focus {
  background-color: #f5f7fa;
  outline: 0;
}

.emotion-3:hover {
  background-color: #f5f7fa;
}

.emotion-3:active {
  background-color: #ebeff5;
}

.emotion-3[aria-selected="true"] {
  background-color: #f0f5fc;
  font-weight: 700;
}

.emotion-3[aria-selected="true"]:active {
  background-color: #accbfc;
}

.emotion-3 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.emotion-3 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-3 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  padding: 0.1875em 0 0.25em;
  white-space: normal;
  word-break: break-all;
}

.emotion-0 {
  font-size: 0.875em;
  margin-right: 0.5714285714285714em;
  word-break: break-word;
}

.emotion-17 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2),0 4px 8px 0 rgba(0,0,0,0.2);
  max-height: 30vh;
  overflow-y: auto;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  width: 14em;
  z-index: 100;
}

.emotion-17 *,
.emotion-17 *::before,
.emotion-17 *::after {
  box-sizing: inherit;
}

.emotion-17[data-placement^="top"] {
  margin-bottom: 5px;
}

.emotion-17[data-placement^="bottom"] {
  margin-top: 5px;
}

.emotion-17[data-placement^="left"] {
  margin-right: 5px;
}

.emotion-17[data-placement^="right"] {
  margin-left: 5px;
}

.emotion-17[data-out-of-boundaries] {
  visibility: hidden;
}

<div>
                                  <div
                                    class="emotion-17"
                                    id="dropdown-7-content"
                                    style="position: absolute; top: 0px; left: 0px; opacity: 0; pointer-events: none;"
                                  >
                                    <div
                                      class="emotion-16"
                                      id="dropdown-7-menu"
                                      role="menu"
                                    >
                                      <div
                                        class="emotion-3"
                                        id="dropdown-7-item-0"
                                        role="menuitem"
                                      >
                                        <span
                                          class="emotion-2"
                                        >
                                          <span
                                            class="emotion-1"
                                          >
                                            <span
                                              class="emotion-0"
                                            >
                                              Light years
                                            </span>
                                          </span>
                                        </span>
                                      </div>
                                      <div
                                        class="emotion-3"
                                        id="dropdown-7-item-1"
                                        role="menuitem"
                                      >
                                        <span
                                          class="emotion-2"
                                        >
                                          <span
                                            class="emotion-1"
                                          >
                                            <span
                                              class="emotion-0"
                                            >
                                              Star stuff
                                            </span>
                                          </span>
                                        </span>
                                      </div>
                                      <div
                                        class="emotion-3"
                                        id="dropdown-7-item-2"
                                        role="menuitem"
                                      >
                                        <span
                                          class="emotion-2"
                                        >
                                          <span
                                            class="emotion-1"
                                          >
                                            <span
                                              class="emotion-0"
                                            >
                                              Encyclopaedia galactica
                                            </span>
                                          </span>
                                        </span>
                                      </div>
                                      <div
                                        class="emotion-3"
                                        id="dropdown-7-item-3"
                                        role="menuitem"
                                      >
                                        <span
                                          class="emotion-2"
                                        >
                                          <span
                                            class="emotion-1"
                                          >
                                            <span
                                              class="emotion-0"
                                            >
                                              Cosmic ocean
                                            </span>
                                          </span>
                                        </span>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              }
                            >
                              <WithForwardRef(DropdownContent)
                                hasArrow={true}
                                id="dropdown-7-content"
                                modifiers={
                                  Object {
                                    "preventOverflow": Object {
                                      "escapeWithReference": true,
                                    },
                                  }
                                }
                                onBlur={[Function]}
                                placement="bottom-start"
                              >
                                <DropdownContent
                                  forwardedRef={[Function]}
                                  hasArrow={true}
                                  id="dropdown-7-content"
                                  modifiers={
                                    Object {
                                      "preventOverflow": Object {
                                        "escapeWithReference": true,
                                      },
                                    }
                                  }
                                  onBlur={[Function]}
                                  placement="bottom-start"
                                >
                                  <WithTheme(RtlPopper)
                                    modifiers={
                                      Object {
                                        "preventOverflow": Object {
                                          "escapeWithReference": true,
                                        },
                                      }
                                    }
                                    placement="bottom-start"
                                  >
                                    <RtlPopper
                                      modifiers={
                                        Object {
                                          "preventOverflow": Object {
                                            "escapeWithReference": true,
                                          },
                                        }
                                      }
                                      placement="bottom-start"
                                    >
                                      <Popper
                                        modifiers={
                                          Object {
                                            "preventOverflow": Object {
                                              "escapeWithReference": true,
                                            },
                                          }
                                        }
                                        placement="bottom-start"
                                      >
                                        <InnerPopper
                                          eventsEnabled={true}
                                          modifiers={
                                            Object {
                                              "preventOverflow": Object {
                                                "escapeWithReference": true,
                                              },
                                            }
                                          }
                                          placement="bottom-start"
                                          positionFixed={false}
                                          referenceElement={
                                            .emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

<span
                                              class="emotion-3"
                                            >
                                              <button
                                                aria-activedescendant="dropdown-7-menu"
                                                aria-describedby="dropdown-7-content"
                                                aria-expanded="true"
                                                aria-haspopup="true"
                                                aria-owns="dropdown-7-content"
                                                class="emotion-2"
                                                role="button"
                                              >
                                                <span
                                                  class="emotion-1"
                                                >
                                                  <span
                                                    class="emotion-0"
                                                  >
                                                    Menu
                                                  </span>
                                                </span>
                                              </button>
                                            </span>
                                          }
                                        >
                                          <Styled(div)
                                            hasArrow={true}
                                            id="dropdown-7-content"
                                            onBlur={[Function]}
                                            style={
                                              Object {
                                                "left": 0,
                                                "opacity": 0,
                                                "pointerEvents": "none",
                                                "position": "absolute",
                                                "top": 0,
                                              }
                                            }
                                          >
                                            <div
                                              className="emotion-21"
                                              id="dropdown-7-content"
                                              onBlur={[Function]}
                                              style={
                                                Object {
                                                  "left": 0,
                                                  "opacity": 0,
                                                  "pointerEvents": "none",
                                                  "position": "absolute",
                                                  "top": 0,
                                                }
                                              }
                                            >
                                              <Menu
                                                data={
                                                  Array [
                                                    Object {
                                                      "text": "Light years",
                                                    },
                                                    Object {
                                                      "text": "Star stuff",
                                                    },
                                                    Object {
                                                      "text": "Encyclopaedia galactica",
                                                    },
                                                    Object {
                                                      "text": "Cosmic ocean",
                                                    },
                                                  ]
                                                }
                                                id="dropdown-7-menu"
                                                item={[Function]}
                                                itemKey="text"
                                                role="menu"
                                              >
                                                <Styled(div)
                                                  id="dropdown-7-menu"
                                                  item={[Function]}
                                                  itemKey="text"
                                                  role="menu"
                                                >
                                                  <div
                                                    className="emotion-20"
                                                    id="dropdown-7-menu"
                                                    role="menu"
                                                  >
                                                    <MenuItem
                                                      index={0}
                                                      isHighlighted={false}
                                                      item={
                                                        Object {
                                                          "text": "Light years",
                                                        }
                                                      }
                                                      key="Light years"
                                                      render={[Function]}
                                                      text="Light years"
                                                    >
                                                      <MenuItem
                                                        id="dropdown-7-item-0"
                                                        index={0}
                                                        isHighlighted={false}
                                                        item={
                                                          Object {
                                                            "text": "Light years",
                                                          }
                                                        }
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        role="menuitem"
                                                        tabIndex={null}
                                                        text="Light years"
                                                      >
                                                        <Styled(div)
                                                          id="dropdown-7-item-0"
                                                          index={0}
                                                          isHighlighted={false}
                                                          item={
                                                            Object {
                                                              "text": "Light years",
                                                            }
                                                          }
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          role="menuitem"
                                                          tabIndex={null}
                                                          text="Light years"
                                                        >
                                                          <div
                                                            className="emotion-7"
                                                            id="dropdown-7-item-0"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex={null}
                                                          >
                                                            <Styled(span)>
                                                              <span
                                                                className="emotion-6"
                                                              >
                                                                <Styled(span)>
                                                                  <span
                                                                    className="emotion-5"
                                                                  >
                                                                    <Styled(span)>
                                                                      <span
                                                                        className="emotion-4"
                                                                      >
                                                                        Light years
                                                                      </span>
                                                                    </Styled(span)>
                                                                  </span>
                                                                </Styled(span)>
                                                              </span>
                                                            </Styled(span)>
                                                          </div>
                                                        </Styled(div)>
                                                      </MenuItem>
                                                    </MenuItem>
                                                    <MenuItem
                                                      index={1}
                                                      isHighlighted={false}
                                                      item={
                                                        Object {
                                                          "text": "Star stuff",
                                                        }
                                                      }
                                                      key="Star stuff"
                                                      render={[Function]}
                                                      text="Star stuff"
                                                    >
                                                      <MenuItem
                                                        id="dropdown-7-item-1"
                                                        index={1}
                                                        isHighlighted={false}
                                                        item={
                                                          Object {
                                                            "text": "Star stuff",
                                                          }
                                                        }
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        role="menuitem"
                                                        tabIndex={null}
                                                        text="Star stuff"
                                                      >
                                                        <Styled(div)
                                                          id="dropdown-7-item-1"
                                                          index={1}
                                                          isHighlighted={false}
                                                          item={
                                                            Object {
                                                              "text": "Star stuff",
                                                            }
                                                          }
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          role="menuitem"
                                                          tabIndex={null}
                                                          text="Star stuff"
                                                        >
                                                          <div
                                                            className="emotion-7"
                                                            id="dropdown-7-item-1"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex={null}
                                                          >
                                                            <Styled(span)>
                                                              <span
                                                                className="emotion-6"
                                                              >
                                                                <Styled(span)>
                                                                  <span
                                                                    className="emotion-5"
                                                                  >
                                                                    <Styled(span)>
                                                                      <span
                                                                        className="emotion-4"
                                                                      >
                                                                        Star stuff
                                                                      </span>
                                                                    </Styled(span)>
                                                                  </span>
                                                                </Styled(span)>
                                                              </span>
                                                            </Styled(span)>
                                                          </div>
                                                        </Styled(div)>
                                                      </MenuItem>
                                                    </MenuItem>
                                                    <MenuItem
                                                      index={2}
                                                      isHighlighted={false}
                                                      item={
                                                        Object {
                                                          "text": "Encyclopaedia galactica",
                                                        }
                                                      }
                                                      key="Encyclopaedia galactica"
                                                      render={[Function]}
                                                      text="Encyclopaedia galactica"
                                                    >
                                                      <MenuItem
                                                        id="dropdown-7-item-2"
                                                        index={2}
                                                        isHighlighted={false}
                                                        item={
                                                          Object {
                                                            "text": "Encyclopaedia galactica",
                                                          }
                                                        }
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        role="menuitem"
                                                        tabIndex={null}
                                                        text="Encyclopaedia galactica"
                                                      >
                                                        <Styled(div)
                                                          id="dropdown-7-item-2"
                                                          index={2}
                                                          isHighlighted={false}
                                                          item={
                                                            Object {
                                                              "text": "Encyclopaedia galactica",
                                                            }
                                                          }
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          role="menuitem"
                                                          tabIndex={null}
                                                          text="Encyclopaedia galactica"
                                                        >
                                                          <div
                                                            className="emotion-7"
                                                            id="dropdown-7-item-2"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex={null}
                                                          >
                                                            <Styled(span)>
                                                              <span
                                                                className="emotion-6"
                                                              >
                                                                <Styled(span)>
                                                                  <span
                                                                    className="emotion-5"
                                                                  >
                                                                    <Styled(span)>
                                                                      <span
                                                                        className="emotion-4"
                                                                      >
                                                                        Encyclopaedia galactica
                                                                      </span>
                                                                    </Styled(span)>
                                                                  </span>
                                                                </Styled(span)>
                                                              </span>
                                                            </Styled(span)>
                                                          </div>
                                                        </Styled(div)>
                                                      </MenuItem>
                                                    </MenuItem>
                                                    <MenuItem
                                                      index={3}
                                                      isHighlighted={false}
                                                      item={
                                                        Object {
                                                          "text": "Cosmic ocean",
                                                        }
                                                      }
                                                      key="Cosmic ocean"
                                                      render={[Function]}
                                                      text="Cosmic ocean"
                                                    >
                                                      <MenuItem
                                                        id="dropdown-7-item-3"
                                                        index={3}
                                                        isHighlighted={false}
                                                        item={
                                                          Object {
                                                            "text": "Cosmic ocean",
                                                          }
                                                        }
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        role="menuitem"
                                                        tabIndex={null}
                                                        text="Cosmic ocean"
                                                      >
                                                        <Styled(div)
                                                          id="dropdown-7-item-3"
                                                          index={3}
                                                          isHighlighted={false}
                                                          item={
                                                            Object {
                                                              "text": "Cosmic ocean",
                                                            }
                                                          }
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          role="menuitem"
                                                          tabIndex={null}
                                                          text="Cosmic ocean"
                                                        >
                                                          <div
                                                            className="emotion-7"
                                                            id="dropdown-7-item-3"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex={null}
                                                          >
                                                            <Styled(span)>
                                                              <span
                                                                className="emotion-6"
                                                              >
                                                                <Styled(span)>
                                                                  <span
                                                                    className="emotion-5"
                                                                  >
                                                                    <Styled(span)>
                                                                      <span
                                                                        className="emotion-4"
                                                                      >
                                                                        Cosmic ocean
                                                                      </span>
                                                                    </Styled(span)>
                                                                  </span>
                                                                </Styled(span)>
                                                              </span>
                                                            </Styled(span)>
                                                          </div>
                                                        </Styled(div)>
                                                      </MenuItem>
                                                    </MenuItem>
                                                  </div>
                                                </Styled(div)>
                                              </Menu>
                                            </div>
                                          </Styled(div)>
                                        </InnerPopper>
                                      </Popper>
                                    </RtlPopper>
                                  </WithTheme(RtlPopper)>
                                </DropdownContent>
                              </WithForwardRef(DropdownContent)>
                            </Portal>
                          </Portal>
                          <EventListener
                            listeners={
                              Array [
                                Object {
                                  "event": "click",
                                  "handler": [Function],
                                  "options": true,
                                  "target": "document",
                                },
                                Object {
                                  "event": "keydown",
                                  "handler": [Function],
                                  "options": true,
                                  "target": "document",
                                },
                              ]
                            }
                          />
                        </span>
                      </Styled(span)>
                    </Manager>
                  </Popover>
                </Dropdown>
              </span>
            </div>
          </Styled(div)>
        </div>
      </Styled(div)>
      <Styled(WithForwardRef(Button))
        minimal={true}
        onClick={[Function]}
        size="small"
      >
        <WithForwardRef(Button)
          className="emotion-28"
          minimal={true}
          onClick={[Function]}
          size="small"
        >
          <Button
            className="emotion-28"
            forwardedRef={null}
            minimal={true}
            onClick={[Function]}
            size="small"
          >
            <Styled(button)
              className="emotion-28"
              minimal={true}
              onClick={[Function]}
              size="small"
              text="Re-center"
            >
              <button
                className="emotion-27"
                onClick={[Function]}
              >
                <Styled(span)>
                  <span
                    className="emotion-1"
                  >
                    <Styled(span)
                      size="small"
                    >
                      <span
                        className="emotion-25"
                      >
                        Re-center
                      </span>
                    </Styled(span)>
                  </span>
                </Styled(span)>
              </button>
            </Styled(button)>
          </Button>
        </WithForwardRef(Button)>
      </Styled(WithForwardRef(Button))>
    </div>
  </Styled(div)>
</ScrollBox>
`;

exports[`Dropdown demo examples Snapshots: rtl 1`] = `
.emotion-22 {
  display: inline-block;
}

.emotion-3 {
  display: inline-block;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-20 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.emotion-20 *,
.emotion-20 *::before,
.emotion-20 *::after {
  box-sizing: inherit;
}

.emotion-6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  padding: 0.1875em 0 0.25em;
  white-space: normal;
  word-break: break-all;
}

.emotion-21 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2),0 4px 8px 0 rgba(0,0,0,0.2);
  max-height: 30vh;
  overflow-y: auto;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  width: 14em;
  z-index: 100;
}

.emotion-21 *,
.emotion-21 *::before,
.emotion-21 *::after {
  box-sizing: inherit;
}

.emotion-21[data-placement^="top"] {
  margin-bottom: 5px;
}

.emotion-21[data-placement^="bottom"] {
  margin-top: 5px;
}

.emotion-21[data-placement^="left"] {
  margin-right: 5px;
}

.emotion-21[data-placement^="right"] {
  margin-left: 5px;
}

.emotion-21[data-out-of-boundaries] {
  visibility: hidden;
}

.emotion-23 {
  padding-bottom: 8.125em;
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-right: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-left: 0.5714285714285714em;
}

.emotion-7 {
  color: #333840;
  cursor: pointer;
  display: block;
  font-weight: 400;
  padding: 0.5em 1em;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-7:focus {
  background-color: #f5f7fa;
  outline: 0;
}

.emotion-7:hover {
  background-color: #f5f7fa;
}

.emotion-7:active {
  background-color: #ebeff5;
}

.emotion-7[aria-selected="true"] {
  background-color: #f0f5fc;
  font-weight: 700;
}

.emotion-7[aria-selected="true"]:active {
  background-color: #accbfc;
}

.emotion-7 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.emotion-7 [role="img"]:first-child {
  margin-left: 0.5em;
}

.emotion-7 [role="img"]:last-child {
  margin-right: 0.5em;
}

.emotion-4 {
  font-size: 0.875em;
  margin-left: 0.5714285714285714em;
  word-break: break-word;
}

<DemoLayout
  dir="rtl"
>
  <Styled(div)
    dir="rtl"
  >
    <div
      className="emotion-23"
      dir="rtl"
    >
      <ThemeProvider>
        <ThemeProvider>
          <Dropdown
            data={
              Array [
                Object {
                  "text": "Light years",
                },
                Object {
                  "text": "Star stuff",
                },
                Object {
                  "text": "Encyclopaedia galactica",
                },
                Object {
                  "text": "Cosmic ocean",
                },
              ]
            }
            isOpen={true}
            itemKey="text"
            placement="bottom-start"
          >
            <Popover
              content={[Function]}
              focusTriggerOnClose={true}
              hasArrow={true}
              id="dropdown-11"
              isOpen={true}
              itemKey="text"
              onClose={[Function]}
              onOpen={[Function]}
              placement="bottom-start"
              triggerRef={[Function]}
            >
              <Manager>
                <Styled(span)
                  focusTriggerOnClose={true}
                  hasArrow={true}
                  id="dropdown-11"
                  isOpen={true}
                  itemKey="text"
                  placement="bottom-start"
                  triggerRef={[Function]}
                >
                  <span
                    className="emotion-22"
                    id="dropdown-11"
                  >
                    <WithForwardRef(PopoverTrigger)
                      aria-activedescendant="dropdown-11-menu"
                      aria-describedby="dropdown-11-content"
                      aria-expanded={true}
                      aria-haspopup={true}
                      aria-owns="dropdown-11-content"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      role="button"
                      size="large"
                    >
                      <PopoverTrigger
                        aria-activedescendant="dropdown-11-menu"
                        aria-describedby="dropdown-11-content"
                        aria-expanded={true}
                        aria-haspopup={true}
                        aria-owns="dropdown-11-content"
                        forwardedRef={[Function]}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        role="button"
                        size="large"
                      >
                        <Reference>
                          <InnerReference
                            setReferenceNode={[Function]}
                          >
                            <Styled(span)>
                              <span
                                className="emotion-3"
                              >
                                <WithForwardRef(Button)
                                  aria-activedescendant="dropdown-11-menu"
                                  aria-describedby="dropdown-11-content"
                                  aria-expanded={true}
                                  aria-haspopup={true}
                                  aria-owns="dropdown-11-content"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  role="button"
                                  size="large"
                                >
                                  <Button
                                    aria-activedescendant="dropdown-11-menu"
                                    aria-describedby="dropdown-11-content"
                                    aria-expanded={true}
                                    aria-haspopup={true}
                                    aria-owns="dropdown-11-content"
                                    forwardedRef={null}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    role="button"
                                    size="large"
                                  >
                                    <Styled(button)
                                      aria-activedescendant="dropdown-11-menu"
                                      aria-describedby="dropdown-11-content"
                                      aria-expanded={true}
                                      aria-haspopup={true}
                                      aria-owns="dropdown-11-content"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      role="button"
                                      size="large"
                                      text="Menu"
                                    >
                                      <button
                                        aria-activedescendant="dropdown-11-menu"
                                        aria-describedby="dropdown-11-content"
                                        aria-expanded={true}
                                        aria-haspopup={true}
                                        aria-owns="dropdown-11-content"
                                        className="emotion-2"
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        role="button"
                                      >
                                        <Styled(span)>
                                          <span
                                            className="emotion-1"
                                          >
                                            <Styled(span)
                                              size="large"
                                            >
                                              <span
                                                className="emotion-0"
                                              >
                                                Menu
                                              </span>
                                            </Styled(span)>
                                          </span>
                                        </Styled(span)>
                                      </button>
                                    </Styled(button)>
                                  </Button>
                                </WithForwardRef(Button)>
                              </span>
                            </Styled(span)>
                          </InnerReference>
                        </Reference>
                      </PopoverTrigger>
                    </WithForwardRef(PopoverTrigger)>
                    <WithForwardRef(DropdownContent)
                      hasArrow={true}
                      id="dropdown-11-content"
                      onBlur={[Function]}
                      placement="bottom-start"
                    >
                      <DropdownContent
                        forwardedRef={[Function]}
                        hasArrow={true}
                        id="dropdown-11-content"
                        onBlur={[Function]}
                        placement="bottom-start"
                      >
                        <WithTheme(RtlPopper)
                          placement="bottom-start"
                        >
                          <RtlPopper
                            placement="bottom-start"
                          >
                            <Popper
                              placement="bottom-end"
                            >
                              <InnerPopper
                                eventsEnabled={true}
                                placement="bottom-end"
                                positionFixed={false}
                                referenceElement={
                                  .emotion-3 {
  display: inline-block;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-right: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-left: 0.5714285714285714em;
}

<span
                                    class="emotion-3"
                                  >
                                    <button
                                      aria-activedescendant="dropdown-11-menu"
                                      aria-describedby="dropdown-11-content"
                                      aria-expanded="true"
                                      aria-haspopup="true"
                                      aria-owns="dropdown-11-content"
                                      class="emotion-2"
                                      role="button"
                                    >
                                      <span
                                        class="emotion-1"
                                      >
                                        <span
                                          class="emotion-0"
                                        >
                                          Menu
                                        </span>
                                      </span>
                                    </button>
                                  </span>
                                }
                              >
                                <Styled(div)
                                  hasArrow={true}
                                  id="dropdown-11-content"
                                  onBlur={[Function]}
                                  style={
                                    Object {
                                      "left": 0,
                                      "opacity": 0,
                                      "pointerEvents": "none",
                                      "position": "absolute",
                                      "top": 0,
                                    }
                                  }
                                >
                                  <div
                                    className="emotion-21"
                                    id="dropdown-11-content"
                                    onBlur={[Function]}
                                    style={
                                      Object {
                                        "left": 0,
                                        "opacity": 0,
                                        "pointerEvents": "none",
                                        "position": "absolute",
                                        "top": 0,
                                      }
                                    }
                                  >
                                    <Menu
                                      data={
                                        Array [
                                          Object {
                                            "text": "Light years",
                                          },
                                          Object {
                                            "text": "Star stuff",
                                          },
                                          Object {
                                            "text": "Encyclopaedia galactica",
                                          },
                                          Object {
                                            "text": "Cosmic ocean",
                                          },
                                        ]
                                      }
                                      id="dropdown-11-menu"
                                      item={[Function]}
                                      itemKey="text"
                                      role="menu"
                                    >
                                      <Styled(div)
                                        id="dropdown-11-menu"
                                        item={[Function]}
                                        itemKey="text"
                                        role="menu"
                                      >
                                        <div
                                          className="emotion-20"
                                          id="dropdown-11-menu"
                                          role="menu"
                                        >
                                          <MenuItem
                                            index={0}
                                            isHighlighted={false}
                                            item={
                                              Object {
                                                "text": "Light years",
                                              }
                                            }
                                            key="Light years"
                                            render={[Function]}
                                            text="Light years"
                                          >
                                            <MenuItem
                                              id="dropdown-11-item-0"
                                              index={0}
                                              isHighlighted={false}
                                              item={
                                                Object {
                                                  "text": "Light years",
                                                }
                                              }
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex={null}
                                              text="Light years"
                                            >
                                              <Styled(div)
                                                id="dropdown-11-item-0"
                                                index={0}
                                                isHighlighted={false}
                                                item={
                                                  Object {
                                                    "text": "Light years",
                                                  }
                                                }
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex={null}
                                                text="Light years"
                                              >
                                                <div
                                                  className="emotion-7"
                                                  id="dropdown-11-item-0"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  role="menuitem"
                                                  tabIndex={null}
                                                >
                                                  <Styled(span)>
                                                    <span
                                                      className="emotion-6"
                                                    >
                                                      <Styled(span)>
                                                        <span
                                                          className="emotion-5"
                                                        >
                                                          <Styled(span)>
                                                            <span
                                                              className="emotion-4"
                                                            >
                                                              Light years
                                                            </span>
                                                          </Styled(span)>
                                                        </span>
                                                      </Styled(span)>
                                                    </span>
                                                  </Styled(span)>
                                                </div>
                                              </Styled(div)>
                                            </MenuItem>
                                          </MenuItem>
                                          <MenuItem
                                            index={1}
                                            isHighlighted={false}
                                            item={
                                              Object {
                                                "text": "Star stuff",
                                              }
                                            }
                                            key="Star stuff"
                                            render={[Function]}
                                            text="Star stuff"
                                          >
                                            <MenuItem
                                              id="dropdown-11-item-1"
                                              index={1}
                                              isHighlighted={false}
                                              item={
                                                Object {
                                                  "text": "Star stuff",
                                                }
                                              }
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex={null}
                                              text="Star stuff"
                                            >
                                              <Styled(div)
                                                id="dropdown-11-item-1"
                                                index={1}
                                                isHighlighted={false}
                                                item={
                                                  Object {
                                                    "text": "Star stuff",
                                                  }
                                                }
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex={null}
                                                text="Star stuff"
                                              >
                                                <div
                                                  className="emotion-7"
                                                  id="dropdown-11-item-1"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  role="menuitem"
                                                  tabIndex={null}
                                                >
                                                  <Styled(span)>
                                                    <span
                                                      className="emotion-6"
                                                    >
                                                      <Styled(span)>
                                                        <span
                                                          className="emotion-5"
                                                        >
                                                          <Styled(span)>
                                                            <span
                                                              className="emotion-4"
                                                            >
                                                              Star stuff
                                                            </span>
                                                          </Styled(span)>
                                                        </span>
                                                      </Styled(span)>
                                                    </span>
                                                  </Styled(span)>
                                                </div>
                                              </Styled(div)>
                                            </MenuItem>
                                          </MenuItem>
                                          <MenuItem
                                            index={2}
                                            isHighlighted={false}
                                            item={
                                              Object {
                                                "text": "Encyclopaedia galactica",
                                              }
                                            }
                                            key="Encyclopaedia galactica"
                                            render={[Function]}
                                            text="Encyclopaedia galactica"
                                          >
                                            <MenuItem
                                              id="dropdown-11-item-2"
                                              index={2}
                                              isHighlighted={false}
                                              item={
                                                Object {
                                                  "text": "Encyclopaedia galactica",
                                                }
                                              }
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex={null}
                                              text="Encyclopaedia galactica"
                                            >
                                              <Styled(div)
                                                id="dropdown-11-item-2"
                                                index={2}
                                                isHighlighted={false}
                                                item={
                                                  Object {
                                                    "text": "Encyclopaedia galactica",
                                                  }
                                                }
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex={null}
                                                text="Encyclopaedia galactica"
                                              >
                                                <div
                                                  className="emotion-7"
                                                  id="dropdown-11-item-2"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  role="menuitem"
                                                  tabIndex={null}
                                                >
                                                  <Styled(span)>
                                                    <span
                                                      className="emotion-6"
                                                    >
                                                      <Styled(span)>
                                                        <span
                                                          className="emotion-5"
                                                        >
                                                          <Styled(span)>
                                                            <span
                                                              className="emotion-4"
                                                            >
                                                              Encyclopaedia galactica
                                                            </span>
                                                          </Styled(span)>
                                                        </span>
                                                      </Styled(span)>
                                                    </span>
                                                  </Styled(span)>
                                                </div>
                                              </Styled(div)>
                                            </MenuItem>
                                          </MenuItem>
                                          <MenuItem
                                            index={3}
                                            isHighlighted={false}
                                            item={
                                              Object {
                                                "text": "Cosmic ocean",
                                              }
                                            }
                                            key="Cosmic ocean"
                                            render={[Function]}
                                            text="Cosmic ocean"
                                          >
                                            <MenuItem
                                              id="dropdown-11-item-3"
                                              index={3}
                                              isHighlighted={false}
                                              item={
                                                Object {
                                                  "text": "Cosmic ocean",
                                                }
                                              }
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex={null}
                                              text="Cosmic ocean"
                                            >
                                              <Styled(div)
                                                id="dropdown-11-item-3"
                                                index={3}
                                                isHighlighted={false}
                                                item={
                                                  Object {
                                                    "text": "Cosmic ocean",
                                                  }
                                                }
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex={null}
                                                text="Cosmic ocean"
                                              >
                                                <div
                                                  className="emotion-7"
                                                  id="dropdown-11-item-3"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  role="menuitem"
                                                  tabIndex={null}
                                                >
                                                  <Styled(span)>
                                                    <span
                                                      className="emotion-6"
                                                    >
                                                      <Styled(span)>
                                                        <span
                                                          className="emotion-5"
                                                        >
                                                          <Styled(span)>
                                                            <span
                                                              className="emotion-4"
                                                            >
                                                              Cosmic ocean
                                                            </span>
                                                          </Styled(span)>
                                                        </span>
                                                      </Styled(span)>
                                                    </span>
                                                  </Styled(span)>
                                                </div>
                                              </Styled(div)>
                                            </MenuItem>
                                          </MenuItem>
                                        </div>
                                      </Styled(div)>
                                    </Menu>
                                  </div>
                                </Styled(div)>
                              </InnerPopper>
                            </Popper>
                          </RtlPopper>
                        </WithTheme(RtlPopper)>
                      </DropdownContent>
                    </WithForwardRef(DropdownContent)>
                    <EventListener
                      listeners={
                        Array [
                          Object {
                            "event": "click",
                            "handler": [Function],
                            "options": true,
                            "target": "document",
                          },
                          Object {
                            "event": "keydown",
                            "handler": [Function],
                            "options": true,
                            "target": "document",
                          },
                        ]
                      }
                    />
                  </span>
                </Styled(span)>
              </Manager>
            </Popover>
          </Dropdown>
        </ThemeProvider>
      </ThemeProvider>
    </div>
  </Styled(div)>
</DemoLayout>
`;

exports[`Dropdown demo examples Snapshots: scrolling-container 1`] = `
.emotion-22 {
  display: inline-block;
}

.emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

.emotion-20 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.emotion-20 *,
.emotion-20 *::before,
.emotion-20 *::after {
  box-sizing: inherit;
}

.emotion-7 {
  color: #333840;
  cursor: pointer;
  display: block;
  font-weight: 400;
  padding: 0.5em 1em;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-7:focus {
  background-color: #f5f7fa;
  outline: 0;
}

.emotion-7:hover {
  background-color: #f5f7fa;
}

.emotion-7:active {
  background-color: #ebeff5;
}

.emotion-7[aria-selected="true"] {
  background-color: #f0f5fc;
  font-weight: 700;
}

.emotion-7[aria-selected="true"]:active {
  background-color: #accbfc;
}

.emotion-7 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.emotion-7 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-7 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  padding: 0.1875em 0 0.25em;
  white-space: normal;
  word-break: break-all;
}

.emotion-4 {
  font-size: 0.875em;
  margin-right: 0.5714285714285714em;
  word-break: break-word;
}

.emotion-21 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2),0 4px 8px 0 rgba(0,0,0,0.2);
  max-height: 30vh;
  overflow-y: auto;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  width: 14em;
  z-index: 100;
}

.emotion-21 *,
.emotion-21 *::before,
.emotion-21 *::after {
  box-sizing: inherit;
}

.emotion-21[data-placement^="top"] {
  margin-bottom: 5px;
}

.emotion-21[data-placement^="bottom"] {
  margin-top: 5px;
}

.emotion-21[data-placement^="left"] {
  margin-right: 5px;
}

.emotion-21[data-placement^="right"] {
  margin-left: 5px;
}

.emotion-21[data-out-of-boundaries] {
  visibility: hidden;
}

.emotion-31 {
  position: relative;
}

.emotion-24 {
  background-color: aliceblue;
  height: 430px;
  overflow: auto;
  position: relative;
}

.emotion-23 {
  height: 930px;
  width: 300vw;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.emotion-28 {
  left: 0;
  position: absolute;
  top: 0;
}

.emotion-27 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: transparent;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 1.5em;
  margin: 0;
  min-width: 1.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
  left: 0;
  position: absolute;
  top: 0;
}

.emotion-27 *,
.emotion-27 *::before,
.emotion-27 *::after {
  box-sizing: inherit;
}

.emotion-27:focus {
  border-color: #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-27:hover {
  background-color: #f5f7fa;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-27:focus:active,
.emotion-27:focus:hover {
  border-color: #1d5bbf;
}

.emotion-27:active {
  background-color: #ebeff5;
  color: #3272d9;
}

.emotion-27::-moz-focus-inner {
  border: 0;
}

.emotion-27 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-27 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-27 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-27 [role="img"]:only-child {
  margin: 0;
}

.emotion-25 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.75em;
  line-height: 2em;
}

<ScrollBox
  autoCenter={true}
  height={430}
>
  <Styled(div)>
    <div
      className="emotion-31"
    >
      <Styled(div)
        height={430}
      >
        <div
          className="emotion-24"
          height={430}
        >
          <Styled(div)
            scrollAreaHeight={430}
          >
            <div
              className="emotion-23"
            >
              <span>
                <Dropdown
                  data={
                    Array [
                      Object {
                        "text": "Light years",
                      },
                      Object {
                        "text": "Star stuff",
                      },
                      Object {
                        "text": "Encyclopaedia galactica",
                      },
                      Object {
                        "text": "Cosmic ocean",
                      },
                    ]
                  }
                  isOpen={true}
                  itemKey="text"
                  placement="bottom-start"
                >
                  <Popover
                    content={[Function]}
                    focusTriggerOnClose={true}
                    hasArrow={true}
                    id="dropdown-6"
                    isOpen={true}
                    itemKey="text"
                    onClose={[Function]}
                    onOpen={[Function]}
                    placement="bottom-start"
                    triggerRef={[Function]}
                  >
                    <Manager>
                      <Styled(span)
                        focusTriggerOnClose={true}
                        hasArrow={true}
                        id="dropdown-6"
                        isOpen={true}
                        itemKey="text"
                        placement="bottom-start"
                        triggerRef={[Function]}
                      >
                        <span
                          className="emotion-22"
                          id="dropdown-6"
                        >
                          <WithForwardRef(PopoverTrigger)
                            aria-activedescendant="dropdown-6-menu"
                            aria-describedby="dropdown-6-content"
                            aria-expanded={true}
                            aria-haspopup={true}
                            aria-owns="dropdown-6-content"
                            onBlur={[Function]}
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            role="button"
                            size="large"
                          >
                            <PopoverTrigger
                              aria-activedescendant="dropdown-6-menu"
                              aria-describedby="dropdown-6-content"
                              aria-expanded={true}
                              aria-haspopup={true}
                              aria-owns="dropdown-6-content"
                              forwardedRef={[Function]}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              role="button"
                              size="large"
                            >
                              <Reference>
                                <InnerReference
                                  setReferenceNode={[Function]}
                                >
                                  <Styled(span)>
                                    <span
                                      className="emotion-3"
                                    >
                                      <WithForwardRef(Button)
                                        aria-activedescendant="dropdown-6-menu"
                                        aria-describedby="dropdown-6-content"
                                        aria-expanded={true}
                                        aria-haspopup={true}
                                        aria-owns="dropdown-6-content"
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        role="button"
                                        size="large"
                                      >
                                        <Button
                                          aria-activedescendant="dropdown-6-menu"
                                          aria-describedby="dropdown-6-content"
                                          aria-expanded={true}
                                          aria-haspopup={true}
                                          aria-owns="dropdown-6-content"
                                          forwardedRef={null}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          role="button"
                                          size="large"
                                        >
                                          <Styled(button)
                                            aria-activedescendant="dropdown-6-menu"
                                            aria-describedby="dropdown-6-content"
                                            aria-expanded={true}
                                            aria-haspopup={true}
                                            aria-owns="dropdown-6-content"
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            role="button"
                                            size="large"
                                            text="Menu"
                                          >
                                            <button
                                              aria-activedescendant="dropdown-6-menu"
                                              aria-describedby="dropdown-6-content"
                                              aria-expanded={true}
                                              aria-haspopup={true}
                                              aria-owns="dropdown-6-content"
                                              className="emotion-2"
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              role="button"
                                            >
                                              <Styled(span)>
                                                <span
                                                  className="emotion-1"
                                                >
                                                  <Styled(span)
                                                    size="large"
                                                  >
                                                    <span
                                                      className="emotion-0"
                                                    >
                                                      Menu
                                                    </span>
                                                  </Styled(span)>
                                                </span>
                                              </Styled(span)>
                                            </button>
                                          </Styled(button)>
                                        </Button>
                                      </WithForwardRef(Button)>
                                    </span>
                                  </Styled(span)>
                                </InnerReference>
                              </Reference>
                            </PopoverTrigger>
                          </WithForwardRef(PopoverTrigger)>
                          <WithForwardRef(DropdownContent)
                            hasArrow={true}
                            id="dropdown-6-content"
                            onBlur={[Function]}
                            placement="bottom-start"
                          >
                            <DropdownContent
                              forwardedRef={[Function]}
                              hasArrow={true}
                              id="dropdown-6-content"
                              onBlur={[Function]}
                              placement="bottom-start"
                            >
                              <WithTheme(RtlPopper)
                                placement="bottom-start"
                              >
                                <RtlPopper
                                  placement="bottom-start"
                                >
                                  <Popper
                                    placement="bottom-start"
                                  >
                                    <InnerPopper
                                      eventsEnabled={true}
                                      placement="bottom-start"
                                      positionFixed={false}
                                      referenceElement={
                                        .emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

<span
                                          class="emotion-3"
                                        >
                                          <button
                                            aria-activedescendant="dropdown-6-menu"
                                            aria-describedby="dropdown-6-content"
                                            aria-expanded="true"
                                            aria-haspopup="true"
                                            aria-owns="dropdown-6-content"
                                            class="emotion-2"
                                            role="button"
                                          >
                                            <span
                                              class="emotion-1"
                                            >
                                              <span
                                                class="emotion-0"
                                              >
                                                Menu
                                              </span>
                                            </span>
                                          </button>
                                        </span>
                                      }
                                    >
                                      <Styled(div)
                                        hasArrow={true}
                                        id="dropdown-6-content"
                                        onBlur={[Function]}
                                        style={
                                          Object {
                                            "left": 0,
                                            "opacity": 0,
                                            "pointerEvents": "none",
                                            "position": "absolute",
                                            "top": 0,
                                          }
                                        }
                                      >
                                        <div
                                          className="emotion-21"
                                          id="dropdown-6-content"
                                          onBlur={[Function]}
                                          style={
                                            Object {
                                              "left": 0,
                                              "opacity": 0,
                                              "pointerEvents": "none",
                                              "position": "absolute",
                                              "top": 0,
                                            }
                                          }
                                        >
                                          <Menu
                                            data={
                                              Array [
                                                Object {
                                                  "text": "Light years",
                                                },
                                                Object {
                                                  "text": "Star stuff",
                                                },
                                                Object {
                                                  "text": "Encyclopaedia galactica",
                                                },
                                                Object {
                                                  "text": "Cosmic ocean",
                                                },
                                              ]
                                            }
                                            id="dropdown-6-menu"
                                            item={[Function]}
                                            itemKey="text"
                                            role="menu"
                                          >
                                            <Styled(div)
                                              id="dropdown-6-menu"
                                              item={[Function]}
                                              itemKey="text"
                                              role="menu"
                                            >
                                              <div
                                                className="emotion-20"
                                                id="dropdown-6-menu"
                                                role="menu"
                                              >
                                                <MenuItem
                                                  index={0}
                                                  isHighlighted={false}
                                                  item={
                                                    Object {
                                                      "text": "Light years",
                                                    }
                                                  }
                                                  key="Light years"
                                                  render={[Function]}
                                                  text="Light years"
                                                >
                                                  <MenuItem
                                                    id="dropdown-6-item-0"
                                                    index={0}
                                                    isHighlighted={false}
                                                    item={
                                                      Object {
                                                        "text": "Light years",
                                                      }
                                                    }
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="menuitem"
                                                    tabIndex={null}
                                                    text="Light years"
                                                  >
                                                    <Styled(div)
                                                      id="dropdown-6-item-0"
                                                      index={0}
                                                      isHighlighted={false}
                                                      item={
                                                        Object {
                                                          "text": "Light years",
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      role="menuitem"
                                                      tabIndex={null}
                                                      text="Light years"
                                                    >
                                                      <div
                                                        className="emotion-7"
                                                        id="dropdown-6-item-0"
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        role="menuitem"
                                                        tabIndex={null}
                                                      >
                                                        <Styled(span)>
                                                          <span
                                                            className="emotion-6"
                                                          >
                                                            <Styled(span)>
                                                              <span
                                                                className="emotion-5"
                                                              >
                                                                <Styled(span)>
                                                                  <span
                                                                    className="emotion-4"
                                                                  >
                                                                    Light years
                                                                  </span>
                                                                </Styled(span)>
                                                              </span>
                                                            </Styled(span)>
                                                          </span>
                                                        </Styled(span)>
                                                      </div>
                                                    </Styled(div)>
                                                  </MenuItem>
                                                </MenuItem>
                                                <MenuItem
                                                  index={1}
                                                  isHighlighted={false}
                                                  item={
                                                    Object {
                                                      "text": "Star stuff",
                                                    }
                                                  }
                                                  key="Star stuff"
                                                  render={[Function]}
                                                  text="Star stuff"
                                                >
                                                  <MenuItem
                                                    id="dropdown-6-item-1"
                                                    index={1}
                                                    isHighlighted={false}
                                                    item={
                                                      Object {
                                                        "text": "Star stuff",
                                                      }
                                                    }
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="menuitem"
                                                    tabIndex={null}
                                                    text="Star stuff"
                                                  >
                                                    <Styled(div)
                                                      id="dropdown-6-item-1"
                                                      index={1}
                                                      isHighlighted={false}
                                                      item={
                                                        Object {
                                                          "text": "Star stuff",
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      role="menuitem"
                                                      tabIndex={null}
                                                      text="Star stuff"
                                                    >
                                                      <div
                                                        className="emotion-7"
                                                        id="dropdown-6-item-1"
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        role="menuitem"
                                                        tabIndex={null}
                                                      >
                                                        <Styled(span)>
                                                          <span
                                                            className="emotion-6"
                                                          >
                                                            <Styled(span)>
                                                              <span
                                                                className="emotion-5"
                                                              >
                                                                <Styled(span)>
                                                                  <span
                                                                    className="emotion-4"
                                                                  >
                                                                    Star stuff
                                                                  </span>
                                                                </Styled(span)>
                                                              </span>
                                                            </Styled(span)>
                                                          </span>
                                                        </Styled(span)>
                                                      </div>
                                                    </Styled(div)>
                                                  </MenuItem>
                                                </MenuItem>
                                                <MenuItem
                                                  index={2}
                                                  isHighlighted={false}
                                                  item={
                                                    Object {
                                                      "text": "Encyclopaedia galactica",
                                                    }
                                                  }
                                                  key="Encyclopaedia galactica"
                                                  render={[Function]}
                                                  text="Encyclopaedia galactica"
                                                >
                                                  <MenuItem
                                                    id="dropdown-6-item-2"
                                                    index={2}
                                                    isHighlighted={false}
                                                    item={
                                                      Object {
                                                        "text": "Encyclopaedia galactica",
                                                      }
                                                    }
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="menuitem"
                                                    tabIndex={null}
                                                    text="Encyclopaedia galactica"
                                                  >
                                                    <Styled(div)
                                                      id="dropdown-6-item-2"
                                                      index={2}
                                                      isHighlighted={false}
                                                      item={
                                                        Object {
                                                          "text": "Encyclopaedia galactica",
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      role="menuitem"
                                                      tabIndex={null}
                                                      text="Encyclopaedia galactica"
                                                    >
                                                      <div
                                                        className="emotion-7"
                                                        id="dropdown-6-item-2"
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        role="menuitem"
                                                        tabIndex={null}
                                                      >
                                                        <Styled(span)>
                                                          <span
                                                            className="emotion-6"
                                                          >
                                                            <Styled(span)>
                                                              <span
                                                                className="emotion-5"
                                                              >
                                                                <Styled(span)>
                                                                  <span
                                                                    className="emotion-4"
                                                                  >
                                                                    Encyclopaedia galactica
                                                                  </span>
                                                                </Styled(span)>
                                                              </span>
                                                            </Styled(span)>
                                                          </span>
                                                        </Styled(span)>
                                                      </div>
                                                    </Styled(div)>
                                                  </MenuItem>
                                                </MenuItem>
                                                <MenuItem
                                                  index={3}
                                                  isHighlighted={false}
                                                  item={
                                                    Object {
                                                      "text": "Cosmic ocean",
                                                    }
                                                  }
                                                  key="Cosmic ocean"
                                                  render={[Function]}
                                                  text="Cosmic ocean"
                                                >
                                                  <MenuItem
                                                    id="dropdown-6-item-3"
                                                    index={3}
                                                    isHighlighted={false}
                                                    item={
                                                      Object {
                                                        "text": "Cosmic ocean",
                                                      }
                                                    }
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="menuitem"
                                                    tabIndex={null}
                                                    text="Cosmic ocean"
                                                  >
                                                    <Styled(div)
                                                      id="dropdown-6-item-3"
                                                      index={3}
                                                      isHighlighted={false}
                                                      item={
                                                        Object {
                                                          "text": "Cosmic ocean",
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      role="menuitem"
                                                      tabIndex={null}
                                                      text="Cosmic ocean"
                                                    >
                                                      <div
                                                        className="emotion-7"
                                                        id="dropdown-6-item-3"
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        role="menuitem"
                                                        tabIndex={null}
                                                      >
                                                        <Styled(span)>
                                                          <span
                                                            className="emotion-6"
                                                          >
                                                            <Styled(span)>
                                                              <span
                                                                className="emotion-5"
                                                              >
                                                                <Styled(span)>
                                                                  <span
                                                                    className="emotion-4"
                                                                  >
                                                                    Cosmic ocean
                                                                  </span>
                                                                </Styled(span)>
                                                              </span>
                                                            </Styled(span)>
                                                          </span>
                                                        </Styled(span)>
                                                      </div>
                                                    </Styled(div)>
                                                  </MenuItem>
                                                </MenuItem>
                                              </div>
                                            </Styled(div)>
                                          </Menu>
                                        </div>
                                      </Styled(div)>
                                    </InnerPopper>
                                  </Popper>
                                </RtlPopper>
                              </WithTheme(RtlPopper)>
                            </DropdownContent>
                          </WithForwardRef(DropdownContent)>
                          <EventListener
                            listeners={
                              Array [
                                Object {
                                  "event": "click",
                                  "handler": [Function],
                                  "options": true,
                                  "target": "document",
                                },
                                Object {
                                  "event": "keydown",
                                  "handler": [Function],
                                  "options": true,
                                  "target": "document",
                                },
                              ]
                            }
                          />
                        </span>
                      </Styled(span)>
                    </Manager>
                  </Popover>
                </Dropdown>
              </span>
            </div>
          </Styled(div)>
        </div>
      </Styled(div)>
      <Styled(WithForwardRef(Button))
        minimal={true}
        onClick={[Function]}
        size="small"
      >
        <WithForwardRef(Button)
          className="emotion-28"
          minimal={true}
          onClick={[Function]}
          size="small"
        >
          <Button
            className="emotion-28"
            forwardedRef={null}
            minimal={true}
            onClick={[Function]}
            size="small"
          >
            <Styled(button)
              className="emotion-28"
              minimal={true}
              onClick={[Function]}
              size="small"
              text="Re-center"
            >
              <button
                className="emotion-27"
                onClick={[Function]}
              >
                <Styled(span)>
                  <span
                    className="emotion-1"
                  >
                    <Styled(span)
                      size="small"
                    >
                      <span
                        className="emotion-25"
                      >
                        Re-center
                      </span>
                    </Styled(span)>
                  </span>
                </Styled(span)>
              </button>
            </Styled(button)>
          </Button>
        </WithForwardRef(Button)>
      </Styled(WithForwardRef(Button))>
    </div>
  </Styled(div)>
</ScrollBox>
`;

exports[`Dropdown demo examples Snapshots: wide 1`] = `
.emotion-22 {
  display: inline-block;
}

.emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

.emotion-23 {
  height: 210px;
}

.emotion-21 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2),0 4px 8px 0 rgba(0,0,0,0.2);
  max-height: 30vh;
  overflow-y: auto;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  width: 21.5em;
  z-index: 100;
}

.emotion-21 *,
.emotion-21 *::before,
.emotion-21 *::after {
  box-sizing: inherit;
}

.emotion-21[data-placement^="top"] {
  margin-bottom: 5px;
}

.emotion-21[data-placement^="bottom"] {
  margin-top: 5px;
}

.emotion-21[data-placement^="left"] {
  margin-right: 5px;
}

.emotion-21[data-placement^="right"] {
  margin-left: 5px;
}

.emotion-21[data-out-of-boundaries] {
  visibility: hidden;
}

.emotion-20 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.emotion-20 *,
.emotion-20 *::before,
.emotion-20 *::after {
  box-sizing: inherit;
}

.emotion-7 {
  color: #333840;
  cursor: pointer;
  display: block;
  font-weight: 400;
  padding: 0.5em 1em;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-7:focus {
  background-color: #f5f7fa;
  outline: 0;
}

.emotion-7:hover {
  background-color: #f5f7fa;
}

.emotion-7:active {
  background-color: #ebeff5;
}

.emotion-7[aria-selected="true"] {
  background-color: #f0f5fc;
  font-weight: 700;
}

.emotion-7[aria-selected="true"]:active {
  background-color: #accbfc;
}

.emotion-7 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.emotion-7 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-7 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  padding: 0.1875em 0 0.25em;
  white-space: normal;
  word-break: break-all;
}

.emotion-4 {
  font-size: 0.875em;
  margin-right: 0.5714285714285714em;
  word-break: break-word;
}

<DemoLayout>
  <Styled(div)>
    <div
      className="emotion-23"
    >
      <Dropdown
        data={
          Array [
            Object {
              "text": "Light years star stuff",
            },
            Object {
              "text": "Harvesting star light citizens of distant epochs",
            },
            Object {
              "text": "Encyclopaedia galactica vastness is bearable",
            },
            Object {
              "text": "Shores of the cosmic ocean",
            },
          ]
        }
        isOpen={true}
        itemKey="text"
        placement="bottom-start"
        wide={true}
      >
        <Popover
          content={[Function]}
          focusTriggerOnClose={true}
          hasArrow={true}
          id="dropdown-3"
          isOpen={true}
          itemKey="text"
          onClose={[Function]}
          onOpen={[Function]}
          placement="bottom-start"
          triggerRef={[Function]}
          wide={true}
        >
          <Manager>
            <Styled(span)
              focusTriggerOnClose={true}
              hasArrow={true}
              id="dropdown-3"
              isOpen={true}
              itemKey="text"
              placement="bottom-start"
              triggerRef={[Function]}
              wide={true}
            >
              <span
                className="emotion-22"
                id="dropdown-3"
              >
                <WithForwardRef(PopoverTrigger)
                  aria-activedescendant="dropdown-3-menu"
                  aria-describedby="dropdown-3-content"
                  aria-expanded={true}
                  aria-haspopup={true}
                  aria-owns="dropdown-3-content"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  role="button"
                  size="large"
                >
                  <PopoverTrigger
                    aria-activedescendant="dropdown-3-menu"
                    aria-describedby="dropdown-3-content"
                    aria-expanded={true}
                    aria-haspopup={true}
                    aria-owns="dropdown-3-content"
                    forwardedRef={[Function]}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    role="button"
                    size="large"
                  >
                    <Reference>
                      <InnerReference
                        setReferenceNode={[Function]}
                      >
                        <Styled(span)>
                          <span
                            className="emotion-3"
                          >
                            <WithForwardRef(Button)
                              aria-activedescendant="dropdown-3-menu"
                              aria-describedby="dropdown-3-content"
                              aria-expanded={true}
                              aria-haspopup={true}
                              aria-owns="dropdown-3-content"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              role="button"
                              size="large"
                            >
                              <Button
                                aria-activedescendant="dropdown-3-menu"
                                aria-describedby="dropdown-3-content"
                                aria-expanded={true}
                                aria-haspopup={true}
                                aria-owns="dropdown-3-content"
                                forwardedRef={null}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                role="button"
                                size="large"
                              >
                                <Styled(button)
                                  aria-activedescendant="dropdown-3-menu"
                                  aria-describedby="dropdown-3-content"
                                  aria-expanded={true}
                                  aria-haspopup={true}
                                  aria-owns="dropdown-3-content"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  role="button"
                                  size="large"
                                  text="Menu"
                                >
                                  <button
                                    aria-activedescendant="dropdown-3-menu"
                                    aria-describedby="dropdown-3-content"
                                    aria-expanded={true}
                                    aria-haspopup={true}
                                    aria-owns="dropdown-3-content"
                                    className="emotion-2"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    role="button"
                                  >
                                    <Styled(span)>
                                      <span
                                        className="emotion-1"
                                      >
                                        <Styled(span)
                                          size="large"
                                        >
                                          <span
                                            className="emotion-0"
                                          >
                                            Menu
                                          </span>
                                        </Styled(span)>
                                      </span>
                                    </Styled(span)>
                                  </button>
                                </Styled(button)>
                              </Button>
                            </WithForwardRef(Button)>
                          </span>
                        </Styled(span)>
                      </InnerReference>
                    </Reference>
                  </PopoverTrigger>
                </WithForwardRef(PopoverTrigger)>
                <WithForwardRef(DropdownContent)
                  hasArrow={true}
                  id="dropdown-3-content"
                  onBlur={[Function]}
                  placement="bottom-start"
                  wide={true}
                >
                  <DropdownContent
                    forwardedRef={[Function]}
                    hasArrow={true}
                    id="dropdown-3-content"
                    onBlur={[Function]}
                    placement="bottom-start"
                    wide={true}
                  >
                    <WithTheme(RtlPopper)
                      placement="bottom-start"
                    >
                      <RtlPopper
                        placement="bottom-start"
                      >
                        <Popper
                          placement="bottom-start"
                        >
                          <InnerPopper
                            eventsEnabled={true}
                            placement="bottom-start"
                            positionFixed={false}
                            referenceElement={
                              .emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

<span
                                class="emotion-3"
                              >
                                <button
                                  aria-activedescendant="dropdown-3-menu"
                                  aria-describedby="dropdown-3-content"
                                  aria-expanded="true"
                                  aria-haspopup="true"
                                  aria-owns="dropdown-3-content"
                                  class="emotion-2"
                                  role="button"
                                >
                                  <span
                                    class="emotion-1"
                                  >
                                    <span
                                      class="emotion-0"
                                    >
                                      Menu
                                    </span>
                                  </span>
                                </button>
                              </span>
                            }
                          >
                            <Styled(div)
                              hasArrow={true}
                              id="dropdown-3-content"
                              onBlur={[Function]}
                              style={
                                Object {
                                  "left": 0,
                                  "opacity": 0,
                                  "pointerEvents": "none",
                                  "position": "absolute",
                                  "top": 0,
                                }
                              }
                              wide={true}
                            >
                              <div
                                className="emotion-21"
                                id="dropdown-3-content"
                                onBlur={[Function]}
                                style={
                                  Object {
                                    "left": 0,
                                    "opacity": 0,
                                    "pointerEvents": "none",
                                    "position": "absolute",
                                    "top": 0,
                                  }
                                }
                              >
                                <Menu
                                  data={
                                    Array [
                                      Object {
                                        "text": "Light years star stuff",
                                      },
                                      Object {
                                        "text": "Harvesting star light citizens of distant epochs",
                                      },
                                      Object {
                                        "text": "Encyclopaedia galactica vastness is bearable",
                                      },
                                      Object {
                                        "text": "Shores of the cosmic ocean",
                                      },
                                    ]
                                  }
                                  id="dropdown-3-menu"
                                  item={[Function]}
                                  itemKey="text"
                                  role="menu"
                                >
                                  <Styled(div)
                                    id="dropdown-3-menu"
                                    item={[Function]}
                                    itemKey="text"
                                    role="menu"
                                  >
                                    <div
                                      className="emotion-20"
                                      id="dropdown-3-menu"
                                      role="menu"
                                    >
                                      <MenuItem
                                        index={0}
                                        isHighlighted={false}
                                        item={
                                          Object {
                                            "text": "Light years star stuff",
                                          }
                                        }
                                        key="Light years star stuff"
                                        render={[Function]}
                                        text="Light years star stuff"
                                      >
                                        <MenuItem
                                          id="dropdown-3-item-0"
                                          index={0}
                                          isHighlighted={false}
                                          item={
                                            Object {
                                              "text": "Light years star stuff",
                                            }
                                          }
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          role="menuitem"
                                          tabIndex={null}
                                          text="Light years star stuff"
                                        >
                                          <Styled(div)
                                            id="dropdown-3-item-0"
                                            index={0}
                                            isHighlighted={false}
                                            item={
                                              Object {
                                                "text": "Light years star stuff",
                                              }
                                            }
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            role="menuitem"
                                            tabIndex={null}
                                            text="Light years star stuff"
                                          >
                                            <div
                                              className="emotion-7"
                                              id="dropdown-3-item-0"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex={null}
                                            >
                                              <Styled(span)>
                                                <span
                                                  className="emotion-6"
                                                >
                                                  <Styled(span)>
                                                    <span
                                                      className="emotion-5"
                                                    >
                                                      <Styled(span)>
                                                        <span
                                                          className="emotion-4"
                                                        >
                                                          Light years star stuff
                                                        </span>
                                                      </Styled(span)>
                                                    </span>
                                                  </Styled(span)>
                                                </span>
                                              </Styled(span)>
                                            </div>
                                          </Styled(div)>
                                        </MenuItem>
                                      </MenuItem>
                                      <MenuItem
                                        index={1}
                                        isHighlighted={false}
                                        item={
                                          Object {
                                            "text": "Harvesting star light citizens of distant epochs",
                                          }
                                        }
                                        key="Harvesting star light citizens of distant epochs"
                                        render={[Function]}
                                        text="Harvesting star light citizens of distant epochs"
                                      >
                                        <MenuItem
                                          id="dropdown-3-item-1"
                                          index={1}
                                          isHighlighted={false}
                                          item={
                                            Object {
                                              "text": "Harvesting star light citizens of distant epochs",
                                            }
                                          }
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          role="menuitem"
                                          tabIndex={null}
                                          text="Harvesting star light citizens of distant epochs"
                                        >
                                          <Styled(div)
                                            id="dropdown-3-item-1"
                                            index={1}
                                            isHighlighted={false}
                                            item={
                                              Object {
                                                "text": "Harvesting star light citizens of distant epochs",
                                              }
                                            }
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            role="menuitem"
                                            tabIndex={null}
                                            text="Harvesting star light citizens of distant epochs"
                                          >
                                            <div
                                              className="emotion-7"
                                              id="dropdown-3-item-1"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex={null}
                                            >
                                              <Styled(span)>
                                                <span
                                                  className="emotion-6"
                                                >
                                                  <Styled(span)>
                                                    <span
                                                      className="emotion-5"
                                                    >
                                                      <Styled(span)>
                                                        <span
                                                          className="emotion-4"
                                                        >
                                                          Harvesting star light citizens of distant epochs
                                                        </span>
                                                      </Styled(span)>
                                                    </span>
                                                  </Styled(span)>
                                                </span>
                                              </Styled(span)>
                                            </div>
                                          </Styled(div)>
                                        </MenuItem>
                                      </MenuItem>
                                      <MenuItem
                                        index={2}
                                        isHighlighted={false}
                                        item={
                                          Object {
                                            "text": "Encyclopaedia galactica vastness is bearable",
                                          }
                                        }
                                        key="Encyclopaedia galactica vastness is bearable"
                                        render={[Function]}
                                        text="Encyclopaedia galactica vastness is bearable"
                                      >
                                        <MenuItem
                                          id="dropdown-3-item-2"
                                          index={2}
                                          isHighlighted={false}
                                          item={
                                            Object {
                                              "text": "Encyclopaedia galactica vastness is bearable",
                                            }
                                          }
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          role="menuitem"
                                          tabIndex={null}
                                          text="Encyclopaedia galactica vastness is bearable"
                                        >
                                          <Styled(div)
                                            id="dropdown-3-item-2"
                                            index={2}
                                            isHighlighted={false}
                                            item={
                                              Object {
                                                "text": "Encyclopaedia galactica vastness is bearable",
                                              }
                                            }
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            role="menuitem"
                                            tabIndex={null}
                                            text="Encyclopaedia galactica vastness is bearable"
                                          >
                                            <div
                                              className="emotion-7"
                                              id="dropdown-3-item-2"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex={null}
                                            >
                                              <Styled(span)>
                                                <span
                                                  className="emotion-6"
                                                >
                                                  <Styled(span)>
                                                    <span
                                                      className="emotion-5"
                                                    >
                                                      <Styled(span)>
                                                        <span
                                                          className="emotion-4"
                                                        >
                                                          Encyclopaedia galactica vastness is bearable
                                                        </span>
                                                      </Styled(span)>
                                                    </span>
                                                  </Styled(span)>
                                                </span>
                                              </Styled(span)>
                                            </div>
                                          </Styled(div)>
                                        </MenuItem>
                                      </MenuItem>
                                      <MenuItem
                                        index={3}
                                        isHighlighted={false}
                                        item={
                                          Object {
                                            "text": "Shores of the cosmic ocean",
                                          }
                                        }
                                        key="Shores of the cosmic ocean"
                                        render={[Function]}
                                        text="Shores of the cosmic ocean"
                                      >
                                        <MenuItem
                                          id="dropdown-3-item-3"
                                          index={3}
                                          isHighlighted={false}
                                          item={
                                            Object {
                                              "text": "Shores of the cosmic ocean",
                                            }
                                          }
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          role="menuitem"
                                          tabIndex={null}
                                          text="Shores of the cosmic ocean"
                                        >
                                          <Styled(div)
                                            id="dropdown-3-item-3"
                                            index={3}
                                            isHighlighted={false}
                                            item={
                                              Object {
                                                "text": "Shores of the cosmic ocean",
                                              }
                                            }
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            role="menuitem"
                                            tabIndex={null}
                                            text="Shores of the cosmic ocean"
                                          >
                                            <div
                                              className="emotion-7"
                                              id="dropdown-3-item-3"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex={null}
                                            >
                                              <Styled(span)>
                                                <span
                                                  className="emotion-6"
                                                >
                                                  <Styled(span)>
                                                    <span
                                                      className="emotion-5"
                                                    >
                                                      <Styled(span)>
                                                        <span
                                                          className="emotion-4"
                                                        >
                                                          Shores of the cosmic ocean
                                                        </span>
                                                      </Styled(span)>
                                                    </span>
                                                  </Styled(span)>
                                                </span>
                                              </Styled(span)>
                                            </div>
                                          </Styled(div)>
                                        </MenuItem>
                                      </MenuItem>
                                    </div>
                                  </Styled(div)>
                                </Menu>
                              </div>
                            </Styled(div)>
                          </InnerPopper>
                        </Popper>
                      </RtlPopper>
                    </WithTheme(RtlPopper)>
                  </DropdownContent>
                </WithForwardRef(DropdownContent)>
                <EventListener
                  listeners={
                    Array [
                      Object {
                        "event": "click",
                        "handler": [Function],
                        "options": true,
                        "target": "document",
                      },
                      Object {
                        "event": "keydown",
                        "handler": [Function],
                        "options": true,
                        "target": "document",
                      },
                    ]
                  }
                />
              </span>
            </Styled(span)>
          </Manager>
        </Popover>
      </Dropdown>
    </div>
  </Styled(div)>
</DemoLayout>
`;

exports[`Dropdown render props children calls children prop with expected arguments 1`] = `
Array [
  Object {
    "helpers": Object {
      "close": [Function],
      "focusTrigger": [Function],
      "open": [Function],
    },
    "props": Object {
      "aria-describedby": "dropdown-18-content",
      "aria-disabled": undefined,
      "aria-expanded": false,
      "aria-haspopup": true,
      "aria-owns": "dropdown-18-content",
      "children": undefined,
      "cursor": undefined,
      "disabled": undefined,
      "onBlur": [Function],
      "onClick": [Function],
      "onKeyDown": [Function],
      "onKeyUp": [Function],
      "ref": [Function],
      "role": "button",
    },
    "state": Object {
      "highlightedIndex": undefined,
      "isOpen": false,
    },
  },
]
`;

exports[`Dropdown render props item calls item prop with expected arguments 1`] = `
Array [
  Object {
    "helpers": Object {
      "close": [Function],
      "focusTrigger": [Function],
      "open": [Function],
    },
    "props": Object {
      "aria-disabled": undefined,
      "children": "item 1",
      "disabled": undefined,
      "id": "dropdown-20-item-0",
      "index": 0,
      "isHighlighted": false,
      "item": Object {
        "onClick": [MockFunction],
        "text": "item 1",
      },
      "onClick": [Function],
      "onKeyDown": [Function],
      "role": "menuitem",
      "tabIndex": null,
      "text": "item 1",
    },
    "state": Object {
      "highlightedIndex": undefined,
      "isOpen": true,
    },
  },
]
`;

exports[`Dropdown render props menu calls menu prop with expected arguments 1`] = `
Array [
  Object {
    "helpers": Object {
      "close": [Function],
      "focusTrigger": [Function],
      "open": [Function],
    },
    "props": Object {
      "data": Array [
        Object {
          "onClick": [MockFunction],
          "text": "item 1",
        },
        Object {
          "divider": true,
        },
        Object {
          "onClick": [MockFunction],
          "text": "item 2",
        },
      ],
      "highlightedIndex": undefined,
      "id": "dropdown-19-menu",
      "item": [Function],
      "itemKey": "text",
      "role": "menu",
    },
    "state": Object {
      "highlightedIndex": undefined,
      "isOpen": true,
    },
  },
]
`;

exports[`Dropdown when open when data is grouped item ids increment across groups 1`] = `
Array [
  "dropdown-64-item-0",
  "dropdown-64-item-1",
]
`;
